<Repository>
  <ROOT>
    <_name></_name>
    <_property />
    <NAMESPACE>
      <_name>CodeAnalyzer</_name>
      <_property>
        <URL>CodeAnalyzer</URL>
      </_property>
      <CLASS>
        <_name>OnAddAndEnterScope</_name>
        <_property>
          <URL>CodeAnalyzer.OnAddAndEnterScope</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Actions.cs</FILENAME>
          <PARENTCLASS>BaseAction</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>BaseAction</_name>
          <_property>
            <URL>CodeAnalyzer.OnAddAndEnterScope.BaseAction</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Do</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>6</SIZE>
          </_property>
          <ARGUMENT>
            <_name>Object</_name>
            <_property>
              <URL>CodeAnalyzer.OnAddAndEnterScope.Object</URL>
              <TYPE>Object</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>OnAddScope</_name>
        <_property>
          <URL>CodeAnalyzer.OnAddScope</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Actions.cs</FILENAME>
          <PARENTCLASS>BaseAction</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>BaseAction</_name>
          <_property>
            <URL>CodeAnalyzer.OnAddScope.BaseAction</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Do</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>4</SIZE>
          </_property>
          <ARGUMENT>
            <_name>Object</_name>
            <_property>
              <URL>CodeAnalyzer.OnAddScope.Object</URL>
              <TYPE>Object</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>OnAddScopes</_name>
        <_property>
          <URL>CodeAnalyzer.OnAddScopes</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Actions.cs</FILENAME>
          <PARENTCLASS>BaseAction</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>BaseAction</_name>
          <_property>
            <URL>CodeAnalyzer.OnAddScopes.BaseAction</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Do</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>5</SIZE>
          </_property>
          <ARGUMENT>
            <_name>Object</_name>
            <_property>
              <URL>CodeAnalyzer.OnAddScopes.Object</URL>
              <TYPE>Object</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <FOR>
            <_name>0</_name>
            <_property />
          </FOR>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>OnLeanvingScope</_name>
        <_property>
          <URL>CodeAnalyzer.OnLeanvingScope</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Actions.cs</FILENAME>
          <PARENTCLASS>BaseAction</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>BaseAction</_name>
          <_property>
            <URL>CodeAnalyzer.OnLeanvingScope.BaseAction</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>EvalComplexityAndSize</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>8</SIZE>
          </_property>
          <IF>
            <_name>0</_name>
            <_property />
          </IF>
        </FUNCTION>
        <FUNCTION>
          <_name>IdentifyAggregationOrComposition</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>8</COMPLEXITY>
            <SIZE>36</SIZE>
          </_property>
          <IF>
            <_name>1</_name>
            <_property />
            <FOREACH>
              <_name>0</_name>
              <_property />
              <IF>
                <_name>2</_name>
                <_property />
                <IF>
                  <_name>3</_name>
                  <_property />
                </IF>
                <OTHER>
                  <_name>0</_name>
                  <_property />
                </OTHER>
              </IF>
            </FOREACH>
            <FOREACH>
              <_name>1</_name>
              <_property />
            </FOREACH>
            <FOREACH>
              <_name>2</_name>
              <_property />
            </FOREACH>
          </IF>
        </FUNCTION>
        <FUNCTION>
          <_name>Do</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>5</SIZE>
          </_property>
          <ARGUMENT>
            <_name>Object</_name>
            <_property>
              <URL>CodeAnalyzer.OnLeanvingScope.Object</URL>
              <TYPE>Object</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>TestAction</_name>
        <_property>
          <URL>CodeAnalyzer.TestAction</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Actions.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalyzer.TestAction.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Main</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>13</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string[]</_name>
            <_property>
              <URL>CodeAnalyzer.TestAction.string[]</URL>
              <TYPE>string[]</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>Analyzer</_name>
        <_property>
          <URL>CodeAnalyzer.Analyzer</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Analyzer.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalyzer.Analyzer.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Start</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>8</COMPLEXITY>
            <SIZE>66</SIZE>
          </_property>
          <ARGUMENT>
            <_name>String[]</_name>
            <_property>
              <URL>CodeAnalyzer.Analyzer.String[]</URL>
              <TYPE>String[]</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>4</_name>
            <_property />
          </IF>
          <TRY>
            <_name>0</_name>
            <_property />
          </TRY>
          <CATCH>
            <_name>0</_name>
            <_property />
          </CATCH>
          <IF>
            <_name>5</_name>
            <_property />
          </IF>
          <IF>
            <_name>6</_name>
            <_property />
          </IF>
          <IF>
            <_name>7</_name>
            <_property />
            <IF>
              <_name>8</_name>
              <_property />
            </IF>
          </IF>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>TestAna</_name>
        <_property>
          <URL>CodeAnalyzer.TestAna</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Analyzer.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalyzer.TestAna.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Main</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>4</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string[]</_name>
            <_property>
              <URL>CodeAnalyzer.TestAna.string[]</URL>
              <TYPE>string[]</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>CommandLineParser</_name>
        <_property>
          <URL>CodeAnalyzer.CommandLineParser</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\CommandLineParser.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalyzer.CommandLineParser.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <MEMBER>
          <_name>_XMLName</_name>
          <_property>
            <URL>CodeAnalyzer.CommandLineParser._XMLName</URL>
            <TYPE>string</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>_X</_name>
          <_property>
            <URL>CodeAnalyzer.CommandLineParser._X</URL>
            <TYPE>bool</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>_R</_name>
          <_property>
            <URL>CodeAnalyzer.CommandLineParser._R</URL>
            <TYPE>bool</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>_S</_name>
          <_property>
            <URL>CodeAnalyzer.CommandLineParser._S</URL>
            <TYPE>bool</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>_path</_name>
          <_property>
            <URL>CodeAnalyzer.CommandLineParser._path</URL>
            <TYPE>string</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>_pattern</_name>
          <_property>
            <URL>CodeAnalyzer.CommandLineParser._pattern</URL>
            <TYPE>string</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <PROPERTY>
          <_name>XMLName</_name>
          <_property>
            <URL>CodeAnalyzer.CommandLineParser.XMLName</URL>
            <TYPE>string</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>1</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <PROPERTY>
          <_name>X</_name>
          <_property>
            <URL>CodeAnalyzer.CommandLineParser.X</URL>
            <TYPE>bool</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>2</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <PROPERTY>
          <_name>R</_name>
          <_property>
            <URL>CodeAnalyzer.CommandLineParser.R</URL>
            <TYPE>bool</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>3</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <PROPERTY>
          <_name>S</_name>
          <_property>
            <URL>CodeAnalyzer.CommandLineParser.S</URL>
            <TYPE>bool</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>4</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <PROPERTY>
          <_name>Path</_name>
          <_property>
            <URL>CodeAnalyzer.CommandLineParser.Path</URL>
            <TYPE>string</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>5</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <PROPERTY>
          <_name>Pattern</_name>
          <_property>
            <URL>CodeAnalyzer.CommandLineParser.Pattern</URL>
            <TYPE>string</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>6</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <FUNCTION>
          <_name>Reset</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>7</SIZE>
          </_property>
        </FUNCTION>
        <FUNCTION>
          <_name>SetOption</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>20</SIZE>
          </_property>
          <ARGUMENT>
            <_name>char</_name>
            <_property>
              <URL>CodeAnalyzer.CommandLineParser.char</URL>
              <TYPE>char</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <SWTICH>
            <_name>0</_name>
            <_property />
          </SWTICH>
        </FUNCTION>
        <FUNCTION>
          <_name>Parse</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>14</COMPLEXITY>
            <SIZE>53</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string[]</_name>
            <_property>
              <URL>CodeAnalyzer.CommandLineParser.string[]</URL>
              <TYPE>string[]</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>9</_name>
            <_property />
          </IF>
          <FOR>
            <_name>1</_name>
            <_property />
            <IF>
              <_name>10</_name>
              <_property />
              <IF>
                <_name>11</_name>
                <_property />
              </IF>
              <OTHER>
                <_name>7</_name>
                <_property />
              </OTHER>
            </IF>
            <IF>
              <_name>12</_name>
              <_property />
              <IF>
                <_name>13</_name>
                <_property />
                <IF>
                  <_name>14</_name>
                  <_property />
                </IF>
              </IF>
            </IF>
            <IF>
              <_name>15</_name>
              <_property />
              <FOR>
                <_name>2</_name>
                <_property />
                <IF>
                  <_name>16</_name>
                  <_property />
                  <IF>
                    <_name>17</_name>
                    <_property />
                  </IF>
                </IF>
              </FOR>
            </IF>
          </FOR>
          <IF>
            <_name>18</_name>
            <_property />
          </IF>
        </FUNCTION>
        <STATEMENT_COMPOSTION>
          <_name>string</_name>
          <_property>
            <URL>CodeAnalyzer.CommandLineParser.string</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>bool</_name>
          <_property>
            <URL>CodeAnalyzer.CommandLineParser.bool</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>bool</_name>
          <_property>
            <URL>CodeAnalyzer.CommandLineParser.bool</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>bool</_name>
          <_property>
            <URL>CodeAnalyzer.CommandLineParser.bool</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>string</_name>
          <_property>
            <URL>CodeAnalyzer.CommandLineParser.string</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>string</_name>
          <_property>
            <URL>CodeAnalyzer.CommandLineParser.string</URL>
          </_property>
        </STATEMENT_COMPOSTION>
      </CLASS>
      <CLASS>
        <_name>TestCMDParser</_name>
        <_property>
          <URL>CodeAnalyzer.TestCMDParser</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\CommandLineParser.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalyzer.TestCMDParser.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Show</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>10</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.TestCMDParser.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>Main</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>5</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string[]</_name>
            <_property>
              <URL>CodeAnalyzer.TestCMDParser.string[]</URL>
              <TYPE>string[]</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>FunctionArgExtractor</_name>
        <_property>
          <URL>CodeAnalyzer.FunctionArgExtractor</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\DeclarationAnalyzer.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalyzer.FunctionArgExtractor.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>GetTextInsideParen</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>List&lt;string&gt;</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>4</COMPLEXITY>
            <SIZE>14</SIZE>
          </_property>
          <ARGUMENT>
            <_name>List&lt;string&gt;</_name>
            <_property>
              <URL>CodeAnalyzer.FunctionArgExtractor.List&lt;string&gt;</URL>
              <TYPE>List&lt;string&gt;</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>19</_name>
            <_property />
          </IF>
          <IF>
            <_name>20</_name>
            <_property />
          </IF>
          <FOR>
            <_name>3</_name>
            <_property />
          </FOR>
        </FUNCTION>
        <FUNCTION>
          <_name>GetArgTypeTable</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>List&lt;string&gt;</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>6</COMPLEXITY>
            <SIZE>29</SIZE>
          </_property>
          <ARGUMENT>
            <_name>List&lt;string&gt;</_name>
            <_property>
              <URL>CodeAnalyzer.FunctionArgExtractor.List&lt;string&gt;</URL>
              <TYPE>List&lt;string&gt;</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>21</_name>
            <_property />
          </IF>
          <FOR>
            <_name>4</_name>
            <_property />
            <IF>
              <_name>22</_name>
              <_property />
              <IF>
                <_name>23</_name>
                <_property />
              </IF>
            </IF>
            <IF>
              <_name>24</_name>
              <_property />
            </IF>
          </FOR>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>DeclarationAnalyzer</_name>
        <_property>
          <URL>CodeAnalyzer.DeclarationAnalyzer</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\DeclarationAnalyzer.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalyzer.DeclarationAnalyzer.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <MEMBER>
          <_name>_currentcursor</_name>
          <_property>
            <URL>CodeAnalyzer.DeclarationAnalyzer._currentcursor</URL>
            <TYPE>int</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>_accessbility</_name>
          <_property>
            <URL>CodeAnalyzer.DeclarationAnalyzer._accessbility</URL>
            <TYPE>string</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>_type</_name>
          <_property>
            <URL>CodeAnalyzer.DeclarationAnalyzer._type</URL>
            <TYPE>string</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>_names</_name>
          <_property>
            <URL>CodeAnalyzer.DeclarationAnalyzer._names</URL>
            <TYPE>List&lt;string&gt;</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>True</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>_isstatic</_name>
          <_property>
            <URL>CodeAnalyzer.DeclarationAnalyzer._isstatic</URL>
            <TYPE>bool</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>_isvirtual</_name>
          <_property>
            <URL>CodeAnalyzer.DeclarationAnalyzer._isvirtual</URL>
            <TYPE>bool</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>_semi</_name>
          <_property>
            <URL>CodeAnalyzer.DeclarationAnalyzer._semi</URL>
            <TYPE>List&lt;string&gt;</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <PROPERTY>
          <_name>Accessbility</_name>
          <_property>
            <URL>CodeAnalyzer.DeclarationAnalyzer.Accessbility</URL>
            <TYPE>String</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>8</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <PROPERTY>
          <_name>Type</_name>
          <_property>
            <URL>CodeAnalyzer.DeclarationAnalyzer.Type</URL>
            <TYPE>String</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>9</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <PROPERTY>
          <_name>Names</_name>
          <_property>
            <URL>CodeAnalyzer.DeclarationAnalyzer.Names</URL>
            <TYPE>List&lt;string&gt;</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>10</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <PROPERTY>
          <_name>IsStatic</_name>
          <_property>
            <URL>CodeAnalyzer.DeclarationAnalyzer.IsStatic</URL>
            <TYPE>bool</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>11</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <PROPERTY>
          <_name>IsVirtual</_name>
          <_property>
            <URL>CodeAnalyzer.DeclarationAnalyzer.IsVirtual</URL>
            <TYPE>bool</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>12</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <FUNCTION>
          <_name>Initilize</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>12</SIZE>
          </_property>
          <ARGUMENT>
            <_name>List&lt;string&gt;</_name>
            <_property>
              <URL>CodeAnalyzer.DeclarationAnalyzer.List&lt;string&gt;</URL>
              <TYPE>List&lt;string&gt;</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>eatType</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>6</SIZE>
          </_property>
          <IF>
            <_name>25</_name>
            <_property />
          </IF>
        </FUNCTION>
        <FUNCTION>
          <_name>eatFirstName</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>5</COMPLEXITY>
            <SIZE>14</SIZE>
          </_property>
          <IF>
            <_name>26</_name>
            <_property />
          </IF>
          <IF>
            <_name>27</_name>
            <_property />
          </IF>
          <OTHER>
            <_name>13</_name>
            <_property />
            <IF>
              <_name>28</_name>
              <_property />
            </IF>
          </OTHER>
        </FUNCTION>
        <FUNCTION>
          <_name>eatNames</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>7</COMPLEXITY>
            <SIZE>16</SIZE>
          </_property>
          <IF>
            <_name>29</_name>
            <_property />
          </IF>
          <OTHER>
            <_name>14</_name>
            <_property />
            <LOOPBREAK>
              <_name>0</_name>
              <_property />
            </LOOPBREAK>
            <IF>
              <_name>30</_name>
              <_property />
            </IF>
            <IF>
              <_name>31</_name>
              <_property />
              <IF>
                <_name>32</_name>
                <_property />
              </IF>
            </IF>
          </OTHER>
        </FUNCTION>
        <FUNCTION>
          <_name>eatPrefixBeforePrefix</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>8</COMPLEXITY>
            <SIZE>16</SIZE>
          </_property>
          <IF>
            <_name>33</_name>
            <_property />
          </IF>
          <IF>
            <_name>34</_name>
            <_property />
            <OTHER>
              <_name>15</_name>
              <_property />
              <LOOPBREAK>
                <_name>1</_name>
                <_property />
              </LOOPBREAK>
              <IF>
                <_name>35</_name>
                <_property />
              </IF>
              <LOOPBREAK>
                <_name>2</_name>
                <_property />
              </LOOPBREAK>
              <IF>
                <_name>36</_name>
                <_property />
              </IF>
            </OTHER>
          </IF>
        </FUNCTION>
        <FUNCTION>
          <_name>eatPrefix</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>5</COMPLEXITY>
            <SIZE>47</SIZE>
          </_property>
          <IF>
            <_name>37</_name>
            <_property />
          </IF>
          <FOR>
            <_name>5</_name>
            <_property />
            <SWTICH>
              <_name>1</_name>
              <_property />
            </SWTICH>
          </FOR>
          <IF>
            <_name>38</_name>
            <_property />
          </IF>
        </FUNCTION>
        <FUNCTION>
          <_name>ExtractArgueType</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>List&lt;string&gt;</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>8</COMPLEXITY>
            <SIZE>40</SIZE>
          </_property>
          <ARGUMENT>
            <_name>List&lt;string&gt;</_name>
            <_property>
              <URL>CodeAnalyzer.DeclarationAnalyzer.List&lt;string&gt;</URL>
              <TYPE>List&lt;string&gt;</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <FOREACH>
            <_name>3</_name>
            <_property />
            <IF>
              <_name>39</_name>
              <_property />
            </IF>
          </FOREACH>
          <IF>
            <_name>40</_name>
            <_property />
          </IF>
          <IF>
            <_name>41</_name>
            <_property />
          </IF>
          <OTHER>
            <_name>16</_name>
            <_property />
            <FOR>
              <_name>6</_name>
              <_property />
              <IF>
                <_name>42</_name>
                <_property />
              </IF>
            </FOR>
          </OTHER>
        </FUNCTION>
        <FUNCTION>
          <_name>Run</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>5</COMPLEXITY>
            <SIZE>12</SIZE>
          </_property>
          <IF>
            <_name>43</_name>
            <_property />
          </IF>
          <IF>
            <_name>44</_name>
            <_property />
          </IF>
          <IF>
            <_name>45</_name>
            <_property />
          </IF>
          <IF>
            <_name>46</_name>
            <_property />
          </IF>
        </FUNCTION>
        <STATEMENT_AGGREGATION>
          <_name>List&lt;string&gt;</_name>
          <_property>
            <URL>CodeAnalyzer.DeclarationAnalyzer.List&lt;string&gt;</URL>
          </_property>
        </STATEMENT_AGGREGATION>
        <STATEMENT_COMPOSTION>
          <_name>int</_name>
          <_property>
            <URL>CodeAnalyzer.DeclarationAnalyzer.int</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>string</_name>
          <_property>
            <URL>CodeAnalyzer.DeclarationAnalyzer.string</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>string</_name>
          <_property>
            <URL>CodeAnalyzer.DeclarationAnalyzer.string</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>bool</_name>
          <_property>
            <URL>CodeAnalyzer.DeclarationAnalyzer.bool</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>bool</_name>
          <_property>
            <URL>CodeAnalyzer.DeclarationAnalyzer.bool</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>List&lt;string&gt;</_name>
          <_property>
            <URL>CodeAnalyzer.DeclarationAnalyzer.List&lt;string&gt;</URL>
          </_property>
        </STATEMENT_COMPOSTION>
      </CLASS>
      <CLASS>
        <_name>TestDecla</_name>
        <_property>
          <URL>CodeAnalyzer.TestDecla</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\DeclarationAnalyzer.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalyzer.TestDecla.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Main</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>3</COMPLEXITY>
            <SIZE>27</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string[]</_name>
            <_property>
              <URL>CodeAnalyzer.TestDecla.string[]</URL>
              <TYPE>string[]</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <FOREACH>
            <_name>4</_name>
            <_property />
          </FOREACH>
          <FOR>
            <_name>7</_name>
            <_property />
          </FOR>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>BaseAction</_name>
        <_property>
          <URL>CodeAnalyzer.BaseAction</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\IAction.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalyzer.BaseAction.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Do</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
          <ARGUMENT>
            <_name>Object</_name>
            <_property>
              <URL>CodeAnalyzer.BaseAction.Object</URL>
              <TYPE>Object</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>BaseRule</_name>
        <_property>
          <URL>CodeAnalyzer.BaseRule</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\IRule.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalyzer.BaseRule.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Test</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
          <ARGUMENT>
            <_name>SemiExpression</_name>
            <_property>
              <URL>CodeAnalyzer.BaseRule.SemiExpression</URL>
              <TYPE>SemiExpression</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>AddSubrule</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
          <ARGUMENT>
            <_name>BaseRule</_name>
            <_property>
              <URL>CodeAnalyzer.BaseRule.BaseRule</URL>
              <TYPE>BaseRule</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>AddAction</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
          <ARGUMENT>
            <_name>BaseAction</_name>
            <_property>
              <URL>CodeAnalyzer.BaseRule.BaseAction</URL>
              <TYPE>BaseAction</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <PROPERTY>
          <_name>ChildRule</_name>
          <_property>
            <URL>CodeAnalyzer.BaseRule.ChildRule</URL>
            <TYPE>List&lt;BaseRule&gt;</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>17</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <PROPERTY>
          <_name>Action</_name>
          <_property>
            <URL>CodeAnalyzer.BaseRule.Action</URL>
            <TYPE>List&lt;BaseAction&gt;</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>18</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <MEMBER>
          <_name>_ChildRule</_name>
          <_property>
            <URL>CodeAnalyzer.BaseRule._ChildRule</URL>
            <TYPE>List&lt;BaseRule&gt;</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>private</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>True</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>_Action</_name>
          <_property>
            <URL>CodeAnalyzer.BaseRule._Action</URL>
            <TYPE>List&lt;BaseAction&gt;</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>private</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>True</ISCREATED>
          </_property>
        </MEMBER>
        <PROPERTY>
          <_name>Arg</_name>
          <_property>
            <URL>CodeAnalyzer.BaseRule.Arg</URL>
            <TYPE>Object</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </PROPERTY>
        <MEMBER>
          <_name>Arg</_name>
          <_property>
            <URL>CodeAnalyzer.BaseRule.Arg</URL>
            <TYPE>Object</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>IsSubruleExclusive</_name>
          <_property>
            <URL>CodeAnalyzer.BaseRule.IsSubruleExclusive</URL>
            <TYPE>bool</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <STATEMENT_AGGREGATION>
          <_name>List&lt;BaseRule&gt;</_name>
          <_property>
            <URL>CodeAnalyzer.BaseRule.List&lt;BaseRule&gt;</URL>
          </_property>
        </STATEMENT_AGGREGATION>
        <STATEMENT_AGGREGATION>
          <_name>List&lt;BaseAction&gt;</_name>
          <_property>
            <URL>CodeAnalyzer.BaseRule.List&lt;BaseAction&gt;</URL>
          </_property>
        </STATEMENT_AGGREGATION>
        <STATEMENT_COMPOSTION>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalyzer.BaseRule.Object</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>bool</_name>
          <_property>
            <URL>CodeAnalyzer.BaseRule.bool</URL>
          </_property>
        </STATEMENT_COMPOSTION>
      </CLASS>
      <CLASS>
        <_name>TrueRule</_name>
        <_property>
          <URL>CodeAnalyzer.TrueRule</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\IRule.cs</FILENAME>
          <PARENTCLASS>BaseRule</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>BaseRule</_name>
          <_property>
            <URL>CodeAnalyzer.TrueRule.BaseRule</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Test</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
          <ARGUMENT>
            <_name>SemiExpression</_name>
            <_property>
              <URL>CodeAnalyzer.TrueRule.SemiExpression</URL>
              <TYPE>SemiExpression</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>Navigate</_name>
        <_property>
          <URL>CodeAnalyzer.Navigate</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks,System.IO</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Navigate.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalyzer.Navigate.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <MEMBER>
          <_name>_instance</_name>
          <_property>
            <URL>CodeAnalyzer.Navigate._instance</URL>
            <TYPE>Navigate</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>private</ACCESSIBILITY>
            <ISSTATIC>True</ISSTATIC>
            <ISCREATED>True</ISCREATED>
          </_property>
        </MEMBER>
        <PROPERTY>
          <_name>Instance</_name>
          <_property>
            <URL>CodeAnalyzer.Navigate.Instance</URL>
            <TYPE>Navigate</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>True</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>19</_name>
            <_property />
            <IF>
              <_name>47</_name>
              <_property />
            </IF>
          </OTHER>
        </PROPERTY>
        <MEMBER>
          <_name>void</_name>
          <_property>
            <URL>CodeAnalyzer.Navigate.void</URL>
            <TYPE>delegate</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <DELEGATE>
          <_name>ONFILEFOUND</_name>
          <_property>
            <URL>CodeAnalyzer.Navigate.ONFILEFOUND</URL>
            <PARENTCLASS>Object</PARENTCLASS>
          </_property>
        </DELEGATE>
        <MEMBER>
          <_name>ONFILEFOUND</_name>
          <_property>
            <URL>CodeAnalyzer.Navigate.ONFILEFOUND</URL>
            <TYPE>event</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <FUNCTION>
          <_name>Go</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>5</COMPLEXITY>
            <SIZE>18</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.Navigate.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.Navigate.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>bool</_name>
            <_property>
              <URL>CodeAnalyzer.Navigate.bool</URL>
              <TYPE>bool</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <FOREACH>
            <_name>5</_name>
            <_property />
            <IF>
              <_name>48</_name>
              <_property />
            </IF>
          </FOREACH>
          <IF>
            <_name>49</_name>
            <_property />
            <FOREACH>
              <_name>6</_name>
              <_property />
            </FOREACH>
          </IF>
        </FUNCTION>
        <STATEMENT_AGGREGATION>
          <_name>Navigate</_name>
          <_property>
            <URL>CodeAnalyzer.Navigate.Navigate</URL>
          </_property>
        </STATEMENT_AGGREGATION>
        <STATEMENT_COMPOSTION>
          <_name>delegate</_name>
          <_property>
            <URL>CodeAnalyzer.Navigate.delegate</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>event</_name>
          <_property>
            <URL>CodeAnalyzer.Navigate.event</URL>
          </_property>
        </STATEMENT_COMPOSTION>
      </CLASS>
      <CLASS>
        <_name>TestNavi</_name>
        <_property>
          <URL>CodeAnalyzer.TestNavi</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks,System.IO</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Navigate.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalyzer.TestNavi.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <MEMBER>
          <_name>navi</_name>
          <_property>
            <URL>CodeAnalyzer.TestNavi.navi</URL>
            <TYPE>Navigate</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>True</ISCREATED>
          </_property>
        </MEMBER>
        <FUNCTION>
          <_name>TestNavi</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>TestNavi</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
        </FUNCTION>
        <FUNCTION>
          <_name>print</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.TestNavi.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>Main</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>4</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string[]</_name>
            <_property>
              <URL>CodeAnalyzer.TestNavi.string[]</URL>
              <TYPE>string[]</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <STATEMENT_AGGREGATION>
          <_name>Navigate</_name>
          <_property>
            <URL>CodeAnalyzer.TestNavi.Navigate</URL>
          </_property>
        </STATEMENT_AGGREGATION>
      </CLASS>
      <CLASS>
        <_name>OutputManager</_name>
        <_property>
          <URL>CodeAnalyzer.OutputManager</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks,System.IO</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\OutputManager.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalyzer.OutputManager.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <MEMBER>
          <_name>_concernedtypes</_name>
          <_property>
            <URL>CodeAnalyzer.OutputManager._concernedtypes</URL>
            <TYPE>SType[]</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>True</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <FUNCTION>
          <_name>DisplayIndent</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>7</SIZE>
          </_property>
          <ARGUMENT>
            <_name>int</_name>
            <_property>
              <URL>CodeAnalyzer.OutputManager.int</URL>
              <TYPE>int</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <FOR>
            <_name>8</_name>
            <_property />
          </FOR>
        </FUNCTION>
        <FUNCTION>
          <_name>DisplayStringWithPaddingRight</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>4</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.OutputManager.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>int</_name>
            <_property>
              <URL>CodeAnalyzer.OutputManager.int</URL>
              <TYPE>int</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>50</_name>
            <_property />
          </IF>
        </FUNCTION>
        <FUNCTION>
          <_name>DisplayFunction</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>5</COMPLEXITY>
            <SIZE>27</SIZE>
          </_property>
          <ARGUMENT>
            <_name>Scope</_name>
            <_property>
              <URL>CodeAnalyzer.OutputManager.Scope</URL>
              <TYPE>Scope</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>51</_name>
            <_property />
            <IF>
              <_name>52</_name>
              <_property />
            </IF>
            <IF>
              <_name>53</_name>
              <_property />
              <IF>
                <_name>54</_name>
                <_property />
              </IF>
            </IF>
          </IF>
        </FUNCTION>
        <FUNCTION>
          <_name>DisplayScope</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>6</SIZE>
          </_property>
          <ARGUMENT>
            <_name>Scope</_name>
            <_property>
              <URL>CodeAnalyzer.OutputManager.Scope</URL>
              <TYPE>Scope</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>55</_name>
            <_property />
          </IF>
        </FUNCTION>
        <FUNCTION>
          <_name>DisplayTypes</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>4</COMPLEXITY>
            <SIZE>19</SIZE>
          </_property>
          <ARGUMENT>
            <_name>Scope</_name>
            <_property>
              <URL>CodeAnalyzer.OutputManager.Scope</URL>
              <TYPE>Scope</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>56</_name>
            <_property />
          </IF>
          <FOREACH>
            <_name>7</_name>
            <_property />
          </FOREACH>
          <IF>
            <_name>57</_name>
            <_property />
          </IF>
        </FUNCTION>
        <FUNCTION>
          <_name>DisplayARelationship</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>4</COMPLEXITY>
            <SIZE>25</SIZE>
          </_property>
          <ARGUMENT>
            <_name>Scope</_name>
            <_property>
              <URL>CodeAnalyzer.OutputManager.Scope</URL>
              <TYPE>Scope</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>58</_name>
            <_property />
            <IF>
              <_name>59</_name>
              <_property />
            </IF>
            <SWTICH>
              <_name>2</_name>
              <_property />
            </SWTICH>
          </IF>
        </FUNCTION>
        <FUNCTION>
          <_name>DisplayRelationships</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>3</COMPLEXITY>
            <SIZE>9</SIZE>
          </_property>
          <ARGUMENT>
            <_name>Scope</_name>
            <_property>
              <URL>CodeAnalyzer.OutputManager.Scope</URL>
              <TYPE>Scope</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>60</_name>
            <_property />
          </IF>
          <FOREACH>
            <_name>8</_name>
            <_property />
          </FOREACH>
        </FUNCTION>
        <MEMBER>
          <_name>_filestream</_name>
          <_property>
            <URL>CodeAnalyzer.OutputManager._filestream</URL>
            <TYPE>FileStream</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>True</ISSTATIC>
            <ISCREATED>True</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>_streamwriter</_name>
          <_property>
            <URL>CodeAnalyzer.OutputManager._streamwriter</URL>
            <TYPE>StreamWriter</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>True</ISSTATIC>
            <ISCREATED>True</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>_indent</_name>
          <_property>
            <URL>CodeAnalyzer.OutputManager._indent</URL>
            <TYPE>int</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>True</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>_indentstep</_name>
          <_property>
            <URL>CodeAnalyzer.OutputManager._indentstep</URL>
            <TYPE>int</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>True</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <FUNCTION>
          <_name>_InitializeWriter</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>4</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.OutputManager.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>_finalizeWriter</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>5</SIZE>
          </_property>
        </FUNCTION>
        <FUNCTION>
          <_name>_WriteIndent</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>4</SIZE>
          </_property>
          <ARGUMENT>
            <_name>int</_name>
            <_property>
              <URL>CodeAnalyzer.OutputManager.int</URL>
              <TYPE>int</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <FOR>
            <_name>9</_name>
            <_property />
          </FOR>
        </FUNCTION>
        <FUNCTION>
          <_name>XMLString</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>string</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>5</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.OutputManager.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>_XMLWriteLine</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>4</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.OutputManager.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>int</_name>
            <_property>
              <URL>CodeAnalyzer.OutputManager.int</URL>
              <TYPE>int</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>61</_name>
            <_property />
          </IF>
        </FUNCTION>
        <FUNCTION>
          <_name>_XMLWrite</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>4</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.OutputManager.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>int</_name>
            <_property>
              <URL>CodeAnalyzer.OutputManager.int</URL>
              <TYPE>int</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>62</_name>
            <_property />
          </IF>
        </FUNCTION>
        <FUNCTION>
          <_name>_XMLWriteBegin</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.OutputManager.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>_XMLWriteEnd</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.OutputManager.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>_WritePropertyWithIndent</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>9</SIZE>
          </_property>
          <ARGUMENT>
            <_name>Scope</_name>
            <_property>
              <URL>CodeAnalyzer.OutputManager.Scope</URL>
              <TYPE>Scope</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>int</_name>
            <_property>
              <URL>CodeAnalyzer.OutputManager.int</URL>
              <TYPE>int</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <FOREACH>
            <_name>9</_name>
            <_property />
          </FOREACH>
        </FUNCTION>
        <FUNCTION>
          <_name>_Write2XML</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>4</COMPLEXITY>
            <SIZE>27</SIZE>
          </_property>
          <ARGUMENT>
            <_name>Scope</_name>
            <_property>
              <URL>CodeAnalyzer.OutputManager.Scope</URL>
              <TYPE>Scope</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>Predicate&lt;SType&gt;</_name>
            <_property>
              <URL>CodeAnalyzer.OutputManager.Predicate&lt;SType&gt;</URL>
              <TYPE>Predicate&lt;SType&gt;</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>63</_name>
            <_property />
          </IF>
          <FOREACH>
            <_name>10</_name>
            <_property />
          </FOREACH>
          <IF>
            <_name>64</_name>
            <_property />
          </IF>
        </FUNCTION>
        <FUNCTION>
          <_name>WriteTypes2XML</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>3</COMPLEXITY>
            <SIZE>11</SIZE>
          </_property>
          <ARGUMENT>
            <_name>Scope</_name>
            <_property>
              <URL>CodeAnalyzer.OutputManager.Scope</URL>
              <TYPE>Scope</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.OutputManager.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <TRY>
            <_name>1</_name>
            <_property />
          </TRY>
          <CATCH>
            <_name>1</_name>
            <_property />
          </CATCH>
        </FUNCTION>
        <STATEMENT_AGGREGATION>
          <_name>FileStream</_name>
          <_property>
            <URL>CodeAnalyzer.OutputManager.FileStream</URL>
          </_property>
        </STATEMENT_AGGREGATION>
        <STATEMENT_AGGREGATION>
          <_name>StreamWriter</_name>
          <_property>
            <URL>CodeAnalyzer.OutputManager.StreamWriter</URL>
          </_property>
        </STATEMENT_AGGREGATION>
        <STATEMENT_COMPOSTION>
          <_name>SType[]</_name>
          <_property>
            <URL>CodeAnalyzer.OutputManager.SType[]</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>int</_name>
          <_property>
            <URL>CodeAnalyzer.OutputManager.int</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>int</_name>
          <_property>
            <URL>CodeAnalyzer.OutputManager.int</URL>
          </_property>
        </STATEMENT_COMPOSTION>
      </CLASS>
      <CLASS>
        <_name>TestOutputMgr</_name>
        <_property>
          <URL>CodeAnalyzer.TestOutputMgr</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks,System.IO</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\OutputManager.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalyzer.TestOutputMgr.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Main</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>14</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string[]</_name>
            <_property>
              <URL>CodeAnalyzer.TestOutputMgr.string[]</URL>
              <TYPE>string[]</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>RuleTester</_name>
        <_property>
          <URL>CodeAnalyzer.RuleTester</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Parser.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalyzer.RuleTester.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Test</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>6</COMPLEXITY>
            <SIZE>15</SIZE>
          </_property>
          <ARGUMENT>
            <_name>SemiExtractor</_name>
            <_property>
              <URL>CodeAnalyzer.RuleTester.SemiExtractor</URL>
              <TYPE>SemiExtractor</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <TRY>
            <_name>2</_name>
            <_property />
            <OTHER>
              <_name>20</_name>
              <_property />
              <LOOPBREAK>
                <_name>3</_name>
                <_property />
              </LOOPBREAK>
              <IF>
                <_name>65</_name>
                <_property />
              </IF>
            </OTHER>
          </TRY>
          <CATCH>
            <_name>2</_name>
            <_property />
          </CATCH>
        </FUNCTION>
        <FUNCTION>
          <_name>TestRuleTree</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>7</COMPLEXITY>
            <SIZE>21</SIZE>
          </_property>
          <ARGUMENT>
            <_name>BaseRule</_name>
            <_property>
              <URL>CodeAnalyzer.RuleTester.BaseRule</URL>
              <TYPE>BaseRule</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>SemiExpression</_name>
            <_property>
              <URL>CodeAnalyzer.RuleTester.SemiExpression</URL>
              <TYPE>SemiExpression</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>66</_name>
            <_property />
          </IF>
          <OTHER>
            <_name>21</_name>
            <_property />
            <FOREACH>
              <_name>11</_name>
              <_property />
            </FOREACH>
            <FOREACH>
              <_name>12</_name>
              <_property />
              <IF>
                <_name>67</_name>
                <_property />
                <LOOPBREAK>
                  <_name>4</_name>
                  <_property />
                </LOOPBREAK>
              </IF>
            </FOREACH>
          </OTHER>
        </FUNCTION>
        <FUNCTION>
          <_name>AddRule</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
          <ARGUMENT>
            <_name>BaseRule</_name>
            <_property>
              <URL>CodeAnalyzer.RuleTester.BaseRule</URL>
              <TYPE>BaseRule</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <MEMBER>
          <_name>Root_Rule</_name>
          <_property>
            <URL>CodeAnalyzer.RuleTester.Root_Rule</URL>
            <TYPE>TrueRule</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>True</ISCREATED>
          </_property>
        </MEMBER>
        <STATEMENT_AGGREGATION>
          <_name>TrueRule</_name>
          <_property>
            <URL>CodeAnalyzer.RuleTester.TrueRule</URL>
          </_property>
        </STATEMENT_AGGREGATION>
      </CLASS>
      <CLASS>
        <_name>Parser</_name>
        <_property>
          <URL>CodeAnalyzer.Parser</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Parser.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalyzer.Parser.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <MEMBER>
          <_name>_ruletester</_name>
          <_property>
            <URL>CodeAnalyzer.Parser._ruletester</URL>
            <TYPE>RuleTester</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>True</ISCREATED>
          </_property>
        </MEMBER>
        <FUNCTION>
          <_name>Parser</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>Parser</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>3</SIZE>
          </_property>
        </FUNCTION>
        <FUNCTION>
          <_name>Parse</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.Parser.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.Parser.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>bool</_name>
            <_property>
              <URL>CodeAnalyzer.Parser.bool</URL>
              <TYPE>bool</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>ParseOneFile</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>8</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.Parser.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>68</_name>
            <_property />
          </IF>
        </FUNCTION>
        <STATEMENT_AGGREGATION>
          <_name>RuleTester</_name>
          <_property>
            <URL>CodeAnalyzer.Parser.RuleTester</URL>
          </_property>
        </STATEMENT_AGGREGATION>
      </CLASS>
      <CLASS>
        <_name>TestP</_name>
        <_property>
          <URL>CodeAnalyzer.TestP</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Parser.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalyzer.TestP.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Main</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>5</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string[]</_name>
            <_property>
              <URL>CodeAnalyzer.TestP.string[]</URL>
              <TYPE>string[]</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>Program</_name>
        <_property>
          <URL>CodeAnalyzer.Program</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Program.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalyzer.Program.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Main</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>6</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string[]</_name>
            <_property>
              <URL>CodeAnalyzer.Program.string[]</URL>
              <TYPE>string[]</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>TypeRepository</_name>
        <_property>
          <URL>CodeAnalyzer.TypeRepository</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Repository.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalyzer.TypeRepository.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <MEMBER>
          <_name>_instance</_name>
          <_property>
            <URL>CodeAnalyzer.TypeRepository._instance</URL>
            <TYPE>TypeRepository</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>private</ACCESSIBILITY>
            <ISSTATIC>True</ISSTATIC>
            <ISCREATED>True</ISCREATED>
          </_property>
        </MEMBER>
        <PROPERTY>
          <_name>Instance</_name>
          <_property>
            <URL>CodeAnalyzer.TypeRepository.Instance</URL>
            <TYPE>TypeRepository</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>True</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>22</_name>
            <_property />
            <IF>
              <_name>69</_name>
              <_property />
            </IF>
          </OTHER>
        </PROPERTY>
        <FUNCTION>
          <_name>Reset</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>3</SIZE>
          </_property>
        </FUNCTION>
        <FUNCTION>
          <_name>AddScope</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>Scope</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>4</COMPLEXITY>
            <SIZE>16</SIZE>
          </_property>
          <ARGUMENT>
            <_name>Scope</_name>
            <_property>
              <URL>CodeAnalyzer.TypeRepository.Scope</URL>
              <TYPE>Scope</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <FOREACH>
            <_name>13</_name>
            <_property />
            <IF>
              <_name>70</_name>
              <_property />
            </IF>
          </FOREACH>
          <IF>
            <_name>71</_name>
            <_property />
          </IF>
        </FUNCTION>
        <FUNCTION>
          <_name>EnterScope</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
          <ARGUMENT>
            <_name>Scope</_name>
            <_property>
              <URL>CodeAnalyzer.TypeRepository.Scope</URL>
              <TYPE>Scope</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>GoToRoot</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
        </FUNCTION>
        <FUNCTION>
          <_name>LeaveScope</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
        </FUNCTION>
        <MEMBER>
          <_name>_rootscope</_name>
          <_property>
            <URL>CodeAnalyzer.TypeRepository._rootscope</URL>
            <TYPE>Scope</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>private</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <PROPERTY>
          <_name>RootScope</_name>
          <_property>
            <URL>CodeAnalyzer.TypeRepository.RootScope</URL>
            <TYPE>Scope</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>23</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <PROPERTY>
          <_name>CurrentScope</_name>
          <_property>
            <URL>CodeAnalyzer.TypeRepository.CurrentScope</URL>
            <TYPE>Scope</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </PROPERTY>
        <MEMBER>
          <_name>CurrentScope</_name>
          <_property>
            <URL>CodeAnalyzer.TypeRepository.CurrentScope</URL>
            <TYPE>Scope</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>_structnames</_name>
          <_property>
            <URL>CodeAnalyzer.TypeRepository._structnames</URL>
            <TYPE>List&lt;string&gt;</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>True</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>_types</_name>
          <_property>
            <URL>CodeAnalyzer.TypeRepository._types</URL>
            <TYPE>List&lt;string&gt;</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>True</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>_boringtypes</_name>
          <_property>
            <URL>CodeAnalyzer.TypeRepository._boringtypes</URL>
            <TYPE>List&lt;string&gt;</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>True</ISCREATED>
          </_property>
        </MEMBER>
        <FUNCTION>
          <_name>GetAllStruct</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>7</SIZE>
          </_property>
          <FOREACH>
            <_name>14</_name>
            <_property />
          </FOREACH>
        </FUNCTION>
        <FUNCTION>
          <_name>GetAllTypes</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>7</SIZE>
          </_property>
          <FOREACH>
            <_name>15</_name>
            <_property />
          </FOREACH>
        </FUNCTION>
        <FUNCTION>
          <_name>GetBoringTypes</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>10</SIZE>
          </_property>
          <FOREACH>
            <_name>16</_name>
            <_property />
          </FOREACH>
        </FUNCTION>
        <MEMBER>
          <_name>bool</_name>
          <_property>
            <URL>CodeAnalyzer.TypeRepository.bool</URL>
            <TYPE>delegate</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <DELEGATE>
          <_name>IsScopeType</_name>
          <_property>
            <URL>CodeAnalyzer.TypeRepository.IsScopeType</URL>
            <PARENTCLASS>Object</PARENTCLASS>
          </_property>
        </DELEGATE>
        <FUNCTION>
          <_name>_STATEMENT_COMPOSTION_To_DEL</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>5</SIZE>
          </_property>
          <ARGUMENT>
            <_name>Scope</_name>
            <_property>
              <URL>CodeAnalyzer.TypeRepository.Scope</URL>
              <TYPE>Scope</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>72</_name>
            <_property />
          </IF>
        </FUNCTION>
        <FUNCTION>
          <_name>_IRRELEVANT_TO_DEL</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>3</COMPLEXITY>
            <SIZE>7</SIZE>
          </_property>
          <ARGUMENT>
            <_name>Scope</_name>
            <_property>
              <URL>CodeAnalyzer.TypeRepository.Scope</URL>
              <TYPE>Scope</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>73</_name>
            <_property />
            <IF>
              <_name>74</_name>
              <_property />
            </IF>
          </IF>
        </FUNCTION>
        <FUNCTION>
          <_name>_BORING_TO_DEL</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>3</COMPLEXITY>
            <SIZE>9</SIZE>
          </_property>
          <ARGUMENT>
            <_name>Scope</_name>
            <_property>
              <URL>CodeAnalyzer.TypeRepository.Scope</URL>
              <TYPE>Scope</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>75</_name>
            <_property />
            <IF>
              <_name>76</_name>
              <_property />
            </IF>
          </IF>
        </FUNCTION>
        <FUNCTION>
          <_name>_PruneInvalid</_name>
          <_property>
            <ACCESSIBILITY>private</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>6</COMPLEXITY>
            <SIZE>19</SIZE>
          </_property>
          <ARGUMENT>
            <_name>Scope</_name>
            <_property>
              <URL>CodeAnalyzer.TypeRepository.Scope</URL>
              <TYPE>Scope</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>IsScopeType</_name>
            <_property>
              <URL>CodeAnalyzer.TypeRepository.IsScopeType</URL>
              <TYPE>IsScopeType</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>77</_name>
            <_property />
            <FOR>
              <_name>10</_name>
              <_property />
              <IF>
                <_name>78</_name>
                <_property />
              </IF>
            </FOR>
            <FOR>
              <_name>11</_name>
              <_property />
            </FOR>
          </IF>
          <FOREACH>
            <_name>17</_name>
            <_property />
          </FOREACH>
        </FUNCTION>
        <FUNCTION>
          <_name>PruneInvalidComposing</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>6</SIZE>
          </_property>
          <OTHER>
            <_name>24</_name>
            <_property />
          </OTHER>
        </FUNCTION>
        <FUNCTION>
          <_name>PruneBoring</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>6</SIZE>
          </_property>
          <OTHER>
            <_name>25</_name>
            <_property />
          </OTHER>
        </FUNCTION>
        <FUNCTION>
          <_name>PruneIrrelevant</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>6</SIZE>
          </_property>
          <OTHER>
            <_name>26</_name>
            <_property />
          </OTHER>
        </FUNCTION>
        <FUNCTION>
          <_name>GetPureName</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>string</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>9</COMPLEXITY>
            <SIZE>26</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.TypeRepository.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <FOR>
            <_name>12</_name>
            <_property />
            <IF>
              <_name>79</_name>
              <_property />
            </IF>
            <IF>
              <_name>80</_name>
              <_property />
            </IF>
            <IF>
              <_name>81</_name>
              <_property />
            </IF>
            <IF>
              <_name>82</_name>
              <_property />
            </IF>
            <IF>
              <_name>83</_name>
              <_property />
              <IF>
                <_name>84</_name>
                <_property />
              </IF>
              <IF>
                <_name>85</_name>
                <_property />
              </IF>
            </IF>
          </FOR>
        </FUNCTION>
        <FUNCTION>
          <_name>GetUrl</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>string</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>5</COMPLEXITY>
            <SIZE>15</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.TypeRepository.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <OTHER>
            <_name>27</_name>
            <_property />
            <LOOPBREAK>
              <_name>5</_name>
              <_property />
            </LOOPBREAK>
            <IF>
              <_name>86</_name>
              <_property />
            </IF>
            <IF>
              <_name>87</_name>
              <_property />
            </IF>
          </OTHER>
        </FUNCTION>
        <FUNCTION>
          <_name>_CompleteUrlForEachMemeber</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>3</COMPLEXITY>
            <SIZE>10</SIZE>
          </_property>
          <ARGUMENT>
            <_name>Scope</_name>
            <_property>
              <URL>CodeAnalyzer.TypeRepository.Scope</URL>
              <TYPE>Scope</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>88</_name>
            <_property />
          </IF>
          <FOREACH>
            <_name>18</_name>
            <_property />
          </FOREACH>
        </FUNCTION>
        <FUNCTION>
          <_name>FindFullUrl</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>string</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>14</COMPLEXITY>
            <SIZE>38</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.TypeRepository.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <OTHER>
            <_name>28</_name>
            <_property />
            <LOOPBREAK>
              <_name>6</_name>
              <_property />
            </LOOPBREAK>
            <IF>
              <_name>89</_name>
              <_property />
            </IF>
            <IF>
              <_name>90</_name>
              <_property />
            </IF>
            <FOREACH>
              <_name>19</_name>
              <_property />
              <IF>
                <_name>91</_name>
                <_property />
                <IF>
                  <_name>92</_name>
                  <_property />
                </IF>
              </IF>
            </FOREACH>
            <LOOPBREAK>
              <_name>7</_name>
              <_property />
            </LOOPBREAK>
            <IF>
              <_name>93</_name>
              <_property />
            </IF>
          </OTHER>
          <OTHER>
            <_name>29</_name>
            <_property />
            <LOOPBREAK>
              <_name>8</_name>
              <_property />
            </LOOPBREAK>
            <IF>
              <_name>94</_name>
              <_property />
            </IF>
            <IF>
              <_name>95</_name>
              <_property />
            </IF>
          </OTHER>
        </FUNCTION>
        <STATEMENT_AGGREGATION>
          <_name>TypeRepository</_name>
          <_property>
            <URL>CodeAnalyzer.TypeRepository.TypeRepository</URL>
          </_property>
        </STATEMENT_AGGREGATION>
        <STATEMENT_AGGREGATION>
          <_name>List&lt;string&gt;</_name>
          <_property>
            <URL>CodeAnalyzer.TypeRepository.List&lt;string&gt;</URL>
          </_property>
        </STATEMENT_AGGREGATION>
        <STATEMENT_AGGREGATION>
          <_name>List&lt;string&gt;</_name>
          <_property>
            <URL>CodeAnalyzer.TypeRepository.List&lt;string&gt;</URL>
          </_property>
        </STATEMENT_AGGREGATION>
        <STATEMENT_AGGREGATION>
          <_name>List&lt;string&gt;</_name>
          <_property>
            <URL>CodeAnalyzer.TypeRepository.List&lt;string&gt;</URL>
          </_property>
        </STATEMENT_AGGREGATION>
        <STATEMENT_COMPOSTION>
          <_name>Scope</_name>
          <_property>
            <URL>CodeAnalyzer.TypeRepository.Scope</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>Scope</_name>
          <_property>
            <URL>CodeAnalyzer.TypeRepository.Scope</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>delegate</_name>
          <_property>
            <URL>CodeAnalyzer.TypeRepository.delegate</URL>
          </_property>
        </STATEMENT_COMPOSTION>
      </CLASS>
      <CLASS>
        <_name>TestRe</_name>
        <_property>
          <URL>CodeAnalyzer.TestRe</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Repository.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalyzer.TestRe.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Main</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>30</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string[]</_name>
            <_property>
              <URL>CodeAnalyzer.TestRe.string[]</URL>
              <TYPE>string[]</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <OTHER>
            <_name>30</_name>
            <_property />
          </OTHER>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>RuleMaker</_name>
        <_property>
          <URL>CodeAnalyzer.RuleMaker</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\RuleMaker.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalyzer.RuleMaker.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Make</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>BaseRule</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>6</COMPLEXITY>
            <SIZE>80</SIZE>
          </_property>
          <OTHER>
            <_name>31</_name>
            <_property />
            <OTHER>
              <_name>32</_name>
              <_property />
            </OTHER>
          </OTHER>
          <OTHER>
            <_name>33</_name>
            <_property />
            <OTHER>
              <_name>34</_name>
              <_property />
            </OTHER>
            <OTHER>
              <_name>35</_name>
              <_property />
            </OTHER>
          </OTHER>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>TestScope</_name>
        <_property>
          <URL>CodeAnalyzer.TestScope</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\RuleMaker.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalyzer.TestScope.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Main</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>326</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string[]</_name>
            <_property>
              <URL>CodeAnalyzer.TestScope.string[]</URL>
              <TYPE>string[]</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <OTHER>
            <_name>54</_name>
            <_property />
          </OTHER>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>DEBUG</_name>
        <_property>
          <URL>CodeAnalyzer.DEBUG</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Rules.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalyzer.DEBUG.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <MEMBER>
          <_name>i</_name>
          <_property>
            <URL>CodeAnalyzer.DEBUG.i</URL>
            <TYPE>int</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>True</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <STATEMENT_COMPOSTION>
          <_name>int</_name>
          <_property>
            <URL>CodeAnalyzer.DEBUG.int</URL>
          </_property>
        </STATEMENT_COMPOSTION>
      </CLASS>
      <CLASS>
        <_name>IsStatement</_name>
        <_property>
          <URL>CodeAnalyzer.IsStatement</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Rules.cs</FILENAME>
          <PARENTCLASS>BaseRule</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>BaseRule</_name>
          <_property>
            <URL>CodeAnalyzer.IsStatement.BaseRule</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Test</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>10</SIZE>
          </_property>
          <ARGUMENT>
            <_name>SemiExpression</_name>
            <_property>
              <URL>CodeAnalyzer.IsStatement.SemiExpression</URL>
              <TYPE>SemiExpression</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>96</_name>
            <_property />
          </IF>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>IsBreak</_name>
        <_property>
          <URL>CodeAnalyzer.IsBreak</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Rules.cs</FILENAME>
          <PARENTCLASS>BaseRule</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>BaseRule</_name>
          <_property>
            <URL>CodeAnalyzer.IsBreak.BaseRule</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Test</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>3</COMPLEXITY>
            <SIZE>7</SIZE>
          </_property>
          <ARGUMENT>
            <_name>SemiExpression</_name>
            <_property>
              <URL>CodeAnalyzer.IsBreak.SemiExpression</URL>
              <TYPE>SemiExpression</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>97</_name>
            <_property />
            <IF>
              <_name>98</_name>
              <_property />
            </IF>
          </IF>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>IsLoopBreak</_name>
        <_property>
          <URL>CodeAnalyzer.IsLoopBreak</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Rules.cs</FILENAME>
          <PARENTCLASS>BaseRule</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>BaseRule</_name>
          <_property>
            <URL>CodeAnalyzer.IsLoopBreak.BaseRule</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Test</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>5</COMPLEXITY>
            <SIZE>28</SIZE>
          </_property>
          <ARGUMENT>
            <_name>SemiExpression</_name>
            <_property>
              <URL>CodeAnalyzer.IsLoopBreak.SemiExpression</URL>
              <TYPE>SemiExpression</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>99</_name>
            <_property />
            <IF>
              <_name>100</_name>
              <_property />
              <IF>
                <_name>101</_name>
                <_property />
                <IF>
                  <_name>102</_name>
                  <_property />
                </IF>
              </IF>
            </IF>
          </IF>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>IsDelegate</_name>
        <_property>
          <URL>CodeAnalyzer.IsDelegate</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Rules.cs</FILENAME>
          <PARENTCLASS>BaseRule</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>BaseRule</_name>
          <_property>
            <URL>CodeAnalyzer.IsDelegate.BaseRule</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Test</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>3</COMPLEXITY>
            <SIZE>12</SIZE>
          </_property>
          <ARGUMENT>
            <_name>SemiExpression</_name>
            <_property>
              <URL>CodeAnalyzer.IsDelegate.SemiExpression</URL>
              <TYPE>SemiExpression</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>103</_name>
            <_property />
            <IF>
              <_name>104</_name>
              <_property />
            </IF>
          </IF>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>IsMemberDeclaration</_name>
        <_property>
          <URL>CodeAnalyzer.IsMemberDeclaration</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Rules.cs</FILENAME>
          <PARENTCLASS>BaseRule</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>BaseRule</_name>
          <_property>
            <URL>CodeAnalyzer.IsMemberDeclaration.BaseRule</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Test</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>3</COMPLEXITY>
            <SIZE>20</SIZE>
          </_property>
          <ARGUMENT>
            <_name>SemiExpression</_name>
            <_property>
              <URL>CodeAnalyzer.IsMemberDeclaration.SemiExpression</URL>
              <TYPE>SemiExpression</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>105</_name>
            <_property />
            <FOR>
              <_name>13</_name>
              <_property />
            </FOR>
          </IF>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>IsNewStatement</_name>
        <_property>
          <URL>CodeAnalyzer.IsNewStatement</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Rules.cs</FILENAME>
          <PARENTCLASS>BaseRule</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>BaseRule</_name>
          <_property>
            <URL>CodeAnalyzer.IsNewStatement.BaseRule</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <MEMBER>
          <_name>VariableName</_name>
          <_property>
            <URL>CodeAnalyzer.IsNewStatement.VariableName</URL>
            <TYPE>List&lt;string&gt;</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>True</ISSTATIC>
            <ISCREATED>True</ISCREATED>
          </_property>
        </MEMBER>
        <FUNCTION>
          <_name>GetVariableName</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>List&lt;string&gt;</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>6</COMPLEXITY>
            <SIZE>23</SIZE>
          </_property>
          <ARGUMENT>
            <_name>SemiExpression</_name>
            <_property>
              <URL>CodeAnalyzer.IsNewStatement.SemiExpression</URL>
              <TYPE>SemiExpression</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <FOR>
            <_name>14</_name>
            <_property />
            <IF>
              <_name>106</_name>
              <_property />
            </IF>
          </FOR>
          <FOR>
            <_name>15</_name>
            <_property />
            <IF>
              <_name>107</_name>
              <_property />
              <IF>
                <_name>108</_name>
                <_property />
              </IF>
            </IF>
          </FOR>
        </FUNCTION>
        <FUNCTION>
          <_name>Test</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>3</COMPLEXITY>
            <SIZE>18</SIZE>
          </_property>
          <ARGUMENT>
            <_name>SemiExpression</_name>
            <_property>
              <URL>CodeAnalyzer.IsNewStatement.SemiExpression</URL>
              <TYPE>SemiExpression</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>109</_name>
            <_property />
            <IF>
              <_name>110</_name>
              <_property />
            </IF>
          </IF>
        </FUNCTION>
        <STATEMENT_AGGREGATION>
          <_name>List&lt;string&gt;</_name>
          <_property>
            <URL>CodeAnalyzer.IsNewStatement.List&lt;string&gt;</URL>
          </_property>
        </STATEMENT_AGGREGATION>
      </CLASS>
      <CLASS>
        <_name>IsEnterScope</_name>
        <_property>
          <URL>CodeAnalyzer.IsEnterScope</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Rules.cs</FILENAME>
          <PARENTCLASS>BaseRule</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>BaseRule</_name>
          <_property>
            <URL>CodeAnalyzer.IsEnterScope.BaseRule</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Test</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>4</COMPLEXITY>
            <SIZE>23</SIZE>
          </_property>
          <ARGUMENT>
            <_name>SemiExpression</_name>
            <_property>
              <URL>CodeAnalyzer.IsEnterScope.SemiExpression</URL>
              <TYPE>SemiExpression</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>111</_name>
            <_property />
          </IF>
          <OTHER>
            <_name>36</_name>
            <_property />
            <IF>
              <_name>112</_name>
              <_property />
            </IF>
          </OTHER>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>IsLeavingScope</_name>
        <_property>
          <URL>CodeAnalyzer.IsLeavingScope</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Rules.cs</FILENAME>
          <PARENTCLASS>BaseRule</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>BaseRule</_name>
          <_property>
            <URL>CodeAnalyzer.IsLeavingScope.BaseRule</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Test</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>4</COMPLEXITY>
            <SIZE>23</SIZE>
          </_property>
          <ARGUMENT>
            <_name>SemiExpression</_name>
            <_property>
              <URL>CodeAnalyzer.IsLeavingScope.SemiExpression</URL>
              <TYPE>SemiExpression</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>113</_name>
            <_property />
          </IF>
          <IF>
            <_name>114</_name>
            <_property />
            <IF>
              <_name>115</_name>
              <_property />
            </IF>
          </IF>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>IsNamespace</_name>
        <_property>
          <URL>CodeAnalyzer.IsNamespace</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Rules.cs</FILENAME>
          <PARENTCLASS>BaseRule</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>BaseRule</_name>
          <_property>
            <URL>CodeAnalyzer.IsNamespace.BaseRule</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Test</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>3</COMPLEXITY>
            <SIZE>9</SIZE>
          </_property>
          <ARGUMENT>
            <_name>SemiExpression</_name>
            <_property>
              <URL>CodeAnalyzer.IsNamespace.SemiExpression</URL>
              <TYPE>SemiExpression</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>116</_name>
            <_property />
            <IF>
              <_name>117</_name>
              <_property />
            </IF>
          </IF>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>IsClass</_name>
        <_property>
          <URL>CodeAnalyzer.IsClass</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Rules.cs</FILENAME>
          <PARENTCLASS>BaseRule</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>BaseRule</_name>
          <_property>
            <URL>CodeAnalyzer.IsClass.BaseRule</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Test</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>7</COMPLEXITY>
            <SIZE>27</SIZE>
          </_property>
          <ARGUMENT>
            <_name>SemiExpression</_name>
            <_property>
              <URL>CodeAnalyzer.IsClass.SemiExpression</URL>
              <TYPE>SemiExpression</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>118</_name>
            <_property />
            <IF>
              <_name>119</_name>
              <_property />
            </IF>
            <IF>
              <_name>120</_name>
              <_property />
            </IF>
            <IF>
              <_name>121</_name>
              <_property />
            </IF>
            <IF>
              <_name>122</_name>
              <_property />
            </IF>
            <IF>
              <_name>123</_name>
              <_property />
            </IF>
          </IF>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>IsInheritance</_name>
        <_property>
          <URL>CodeAnalyzer.IsInheritance</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Rules.cs</FILENAME>
          <PARENTCLASS>BaseRule</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>BaseRule</_name>
          <_property>
            <URL>CodeAnalyzer.IsInheritance.BaseRule</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Test</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>3</COMPLEXITY>
            <SIZE>10</SIZE>
          </_property>
          <ARGUMENT>
            <_name>SemiExpression</_name>
            <_property>
              <URL>CodeAnalyzer.IsInheritance.SemiExpression</URL>
              <TYPE>SemiExpression</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>124</_name>
            <_property />
            <IF>
              <_name>125</_name>
              <_property />
            </IF>
          </IF>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>IsFunction</_name>
        <_property>
          <URL>CodeAnalyzer.IsFunction</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Rules.cs</FILENAME>
          <PARENTCLASS>BaseRule</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>BaseRule</_name>
          <_property>
            <URL>CodeAnalyzer.IsFunction.BaseRule</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>isSpecialToken</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>6</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.IsFunction.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <FOREACH>
            <_name>20</_name>
            <_property />
          </FOREACH>
        </FUNCTION>
        <FUNCTION>
          <_name>Test</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>4</COMPLEXITY>
            <SIZE>20</SIZE>
          </_property>
          <ARGUMENT>
            <_name>SemiExpression</_name>
            <_property>
              <URL>CodeAnalyzer.IsFunction.SemiExpression</URL>
              <TYPE>SemiExpression</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>126</_name>
            <_property />
          </IF>
          <IF>
            <_name>127</_name>
            <_property />
            <IF>
              <_name>128</_name>
              <_property />
            </IF>
          </IF>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>IsProperty</_name>
        <_property>
          <URL>CodeAnalyzer.IsProperty</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Rules.cs</FILENAME>
          <PARENTCLASS>BaseRule</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>BaseRule</_name>
          <_property>
            <URL>CodeAnalyzer.IsProperty.BaseRule</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Test</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>9</COMPLEXITY>
            <SIZE>30</SIZE>
          </_property>
          <ARGUMENT>
            <_name>SemiExpression</_name>
            <_property>
              <URL>CodeAnalyzer.IsProperty.SemiExpression</URL>
              <TYPE>SemiExpression</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>129</_name>
            <_property />
          </IF>
          <IF>
            <_name>130</_name>
            <_property />
          </IF>
          <FOREACH>
            <_name>21</_name>
            <_property />
            <IF>
              <_name>131</_name>
              <_property />
            </IF>
            <IF>
              <_name>132</_name>
              <_property />
              <IF>
                <_name>133</_name>
                <_property />
              </IF>
            </IF>
          </FOREACH>
          <IF>
            <_name>134</_name>
            <_property />
          </IF>
          <IF>
            <_name>135</_name>
            <_property />
          </IF>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>IsPropertyMember</_name>
        <_property>
          <URL>CodeAnalyzer.IsPropertyMember</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Rules.cs</FILENAME>
          <PARENTCLASS>BaseRule</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>BaseRule</_name>
          <_property>
            <URL>CodeAnalyzer.IsPropertyMember.BaseRule</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Test</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>9</COMPLEXITY>
            <SIZE>32</SIZE>
          </_property>
          <ARGUMENT>
            <_name>SemiExpression</_name>
            <_property>
              <URL>CodeAnalyzer.IsPropertyMember.SemiExpression</URL>
              <TYPE>SemiExpression</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>136</_name>
            <_property />
          </IF>
          <OTHER>
            <_name>37</_name>
            <_property />
            <IF>
              <_name>137</_name>
              <_property />
            </IF>
            <IF>
              <_name>138</_name>
              <_property />
            </IF>
          </OTHER>
          <IF>
            <_name>139</_name>
            <_property />
          </IF>
          <OTHER>
            <_name>38</_name>
            <_property />
            <IF>
              <_name>140</_name>
              <_property />
            </IF>
            <OTHER>
              <_name>39</_name>
              <_property />
            </OTHER>
          </OTHER>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>IsOtherScope</_name>
        <_property>
          <URL>CodeAnalyzer.IsOtherScope</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Rules.cs</FILENAME>
          <PARENTCLASS>BaseRule</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>BaseRule</_name>
          <_property>
            <URL>CodeAnalyzer.IsOtherScope.BaseRule</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Test</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>5</SIZE>
          </_property>
          <ARGUMENT>
            <_name>SemiExpression</_name>
            <_property>
              <URL>CodeAnalyzer.IsOtherScope.SemiExpression</URL>
              <TYPE>SemiExpression</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>IsUsingFunction</_name>
        <_property>
          <URL>CodeAnalyzer.IsUsingFunction</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Rules.cs</FILENAME>
          <PARENTCLASS>BaseRule</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>BaseRule</_name>
          <_property>
            <URL>CodeAnalyzer.IsUsingFunction.BaseRule</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Test</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>4</COMPLEXITY>
            <SIZE>19</SIZE>
          </_property>
          <ARGUMENT>
            <_name>SemiExpression</_name>
            <_property>
              <URL>CodeAnalyzer.IsUsingFunction.SemiExpression</URL>
              <TYPE>SemiExpression</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>141</_name>
            <_property />
          </IF>
          <IF>
            <_name>142</_name>
            <_property />
            <FOREACH>
              <_name>22</_name>
              <_property />
            </FOREACH>
          </IF>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>TestR</_name>
        <_property>
          <URL>CodeAnalyzer.TestR</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Rules.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalyzer.TestR.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>TestOnlyDetectFunction</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>13</SIZE>
          </_property>
        </FUNCTION>
        <FUNCTION>
          <_name>TestOnlyDetectClass</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>13</SIZE>
          </_property>
        </FUNCTION>
        <FUNCTION>
          <_name>Main</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>6</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string[]</_name>
            <_property>
              <URL>CodeAnalyzer.TestR.string[]</URL>
              <TYPE>string[]</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
      </CLASS>
      <ENUM>
        <_name>SType</_name>
        <_property>
          <URL>CodeAnalyzer.SType</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Scope.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalyzer.SType.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
      </ENUM>
      <CLASS>
        <_name>PROPERTYKEY</_name>
        <_property>
          <URL>CodeAnalyzer.PROPERTYKEY</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Scope.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalyzer.PROPERTYKEY.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <PROPERTY>
          <_name>ACCESSIBILITY</_name>
          <_property>
            <URL>CodeAnalyzer.PROPERTYKEY.ACCESSIBILITY</URL>
            <TYPE>string</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>True</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>40</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <PROPERTY>
          <_name>TYPE</_name>
          <_property>
            <URL>CodeAnalyzer.PROPERTYKEY.TYPE</URL>
            <TYPE>string</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>True</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>41</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <PROPERTY>
          <_name>ISSTATIC</_name>
          <_property>
            <URL>CodeAnalyzer.PROPERTYKEY.ISSTATIC</URL>
            <TYPE>string</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>True</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>42</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <PROPERTY>
          <_name>ARGSTABLE</_name>
          <_property>
            <URL>CodeAnalyzer.PROPERTYKEY.ARGSTABLE</URL>
            <TYPE>string</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>True</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>43</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <PROPERTY>
          <_name>COMPLEXITY</_name>
          <_property>
            <URL>CodeAnalyzer.PROPERTYKEY.COMPLEXITY</URL>
            <TYPE>string</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>True</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>44</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <PROPERTY>
          <_name>SIZE</_name>
          <_property>
            <URL>CodeAnalyzer.PROPERTYKEY.SIZE</URL>
            <TYPE>string</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>True</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>45</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <PROPERTY>
          <_name>TYPEURL</_name>
          <_property>
            <URL>CodeAnalyzer.PROPERTYKEY.TYPEURL</URL>
            <TYPE>string</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>True</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>46</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <PROPERTY>
          <_name>URL</_name>
          <_property>
            <URL>CodeAnalyzer.PROPERTYKEY.URL</URL>
            <TYPE>string</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>True</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>47</_name>
            <_property />
          </OTHER>
        </PROPERTY>
      </CLASS>
      <CLASS>
        <_name>Scope</_name>
        <_property>
          <URL>CodeAnalyzer.Scope</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Scope.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalyzer.Scope.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Scope</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>Scope</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>6</SIZE>
          </_property>
        </FUNCTION>
        <PROPERTY>
          <_name>BeginLine</_name>
          <_property>
            <URL>CodeAnalyzer.Scope.BeginLine</URL>
            <TYPE>uint</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </PROPERTY>
        <MEMBER>
          <_name>BeginLine</_name>
          <_property>
            <URL>CodeAnalyzer.Scope.BeginLine</URL>
            <TYPE>uint</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <PROPERTY>
          <_name>EndLine</_name>
          <_property>
            <URL>CodeAnalyzer.Scope.EndLine</URL>
            <TYPE>uint</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </PROPERTY>
        <MEMBER>
          <_name>EndLine</_name>
          <_property>
            <URL>CodeAnalyzer.Scope.EndLine</URL>
            <TYPE>uint</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <PROPERTY>
          <_name>Type</_name>
          <_property>
            <URL>CodeAnalyzer.Scope.Type</URL>
            <TYPE>SType</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </PROPERTY>
        <MEMBER>
          <_name>Type</_name>
          <_property>
            <URL>CodeAnalyzer.Scope.Type</URL>
            <TYPE>SType</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <PROPERTY>
          <_name>Name</_name>
          <_property>
            <URL>CodeAnalyzer.Scope.Name</URL>
            <TYPE>string</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </PROPERTY>
        <MEMBER>
          <_name>Name</_name>
          <_property>
            <URL>CodeAnalyzer.Scope.Name</URL>
            <TYPE>string</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>_property</_name>
          <_property>
            <URL>CodeAnalyzer.Scope._property</URL>
            <TYPE>Dictionary&lt;string,string&gt;</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>True</ISCREATED>
          </_property>
        </MEMBER>
        <PROPERTY>
          <_name>Property</_name>
          <_property>
            <URL>CodeAnalyzer.Scope.Property</URL>
            <TYPE>Dictionary&lt;string,string&gt;</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>48</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <FUNCTION>
          <_name>HasSameSignature</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>3</COMPLEXITY>
            <SIZE>7</SIZE>
          </_property>
          <ARGUMENT>
            <_name>Scope</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.Scope</URL>
              <TYPE>Scope</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>143</_name>
            <_property />
          </IF>
          <IF>
            <_name>144</_name>
            <_property />
          </IF>
        </FUNCTION>
        <FUNCTION>
          <_name>HasUrl</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
        </FUNCTION>
        <FUNCTION>
          <_name>SetUrl</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>Clone</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>Scope</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>12</SIZE>
          </_property>
          <FOREACH>
            <_name>23</_name>
            <_property />
          </FOREACH>
        </FUNCTION>
        <FUNCTION>
          <_name>GetMember</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>string[]</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>3</COMPLEXITY>
            <SIZE>10</SIZE>
          </_property>
          <ARGUMENT>
            <_name>Scope</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.Scope</URL>
              <TYPE>Scope</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>145</_name>
            <_property />
          </IF>
          <IF>
            <_name>146</_name>
            <_property />
          </IF>
        </FUNCTION>
        <FUNCTION>
          <_name>MakeProperty</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>Scope</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>4</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>uint</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.uint</URL>
              <TYPE>uint</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>uint</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.uint</URL>
              <TYPE>uint</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>bool</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.bool</URL>
              <TYPE>bool</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>MakeMember</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>Scope</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>12</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>uint</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.uint</URL>
              <TYPE>uint</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>uint</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.uint</URL>
              <TYPE>uint</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>bool</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.bool</URL>
              <TYPE>bool</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>MakeFunction</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>Scope</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>14</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>List&lt;string&gt;</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.List&lt;string&gt;</URL>
              <TYPE>List&lt;string&gt;</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>uint</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.uint</URL>
              <TYPE>uint</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>uint</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.uint</URL>
              <TYPE>uint</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>bool</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.bool</URL>
              <TYPE>bool</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>FindParentClass</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>Scope</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>4</COMPLEXITY>
            <SIZE>11</SIZE>
          </_property>
          <ARGUMENT>
            <_name>Scope</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.Scope</URL>
              <TYPE>Scope</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <OTHER>
            <_name>49</_name>
            <_property />
            <IF>
              <_name>147</_name>
              <_property />
            </IF>
            <IF>
              <_name>148</_name>
              <_property />
            </IF>
          </OTHER>
        </FUNCTION>
        <FUNCTION>
          <_name>FindParentWithType</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>Scope</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>4</COMPLEXITY>
            <SIZE>10</SIZE>
          </_property>
          <ARGUMENT>
            <_name>Scope</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.Scope</URL>
              <TYPE>Scope</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>Predicate&lt;SType&gt;</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.Predicate&lt;SType&gt;</URL>
              <TYPE>Predicate&lt;SType&gt;</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <OTHER>
            <_name>50</_name>
            <_property />
            <IF>
              <_name>149</_name>
              <_property />
            </IF>
            <IF>
              <_name>150</_name>
              <_property />
            </IF>
          </OTHER>
        </FUNCTION>
        <FUNCTION>
          <_name>FindChildWithType</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>List&lt;Scope&gt;</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>6</COMPLEXITY>
            <SIZE>20</SIZE>
          </_property>
          <ARGUMENT>
            <_name>Scope</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.Scope</URL>
              <TYPE>Scope</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>Predicate&lt;SType&gt;</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.Predicate&lt;SType&gt;</URL>
              <TYPE>Predicate&lt;SType&gt;</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>bool</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.bool</URL>
              <TYPE>bool</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>151</_name>
            <_property />
          </IF>
          <IF>
            <_name>152</_name>
            <_property />
          </IF>
          <OTHER>
            <_name>51</_name>
            <_property />
            <FOREACH>
              <_name>24</_name>
              <_property />
              <IF>
                <_name>153</_name>
                <_property />
              </IF>
            </FOREACH>
          </OTHER>
        </FUNCTION>
        <FUNCTION>
          <_name>Make</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>Scope</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>7</SIZE>
          </_property>
          <ARGUMENT>
            <_name>SType</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.SType</URL>
              <TYPE>SType</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>uint</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.uint</URL>
              <TYPE>uint</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>uint</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.uint</URL>
              <TYPE>uint</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>MakeRoot</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>Scope</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>7</SIZE>
          </_property>
        </FUNCTION>
        <MEMBER>
          <_name>Keywords</_name>
          <_property>
            <URL>CodeAnalyzer.Scope.Keywords</URL>
            <TYPE>string[]</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>True</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>Type2Count</_name>
          <_property>
            <URL>CodeAnalyzer.Scope.Type2Count</URL>
            <TYPE>Dictionary&lt;SType,int&gt;</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>True</ISSTATIC>
            <ISCREATED>True</ISCREATED>
          </_property>
        </MEMBER>
        <FUNCTION>
          <_name>IsKeyword</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>HasWhichKeyword</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>string</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>3</COMPLEXITY>
            <SIZE>9</SIZE>
          </_property>
          <ARGUMENT>
            <_name>IEnumerable&lt;string&gt;</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.IEnumerable&lt;string&gt;</URL>
              <TYPE>IEnumerable&lt;string&gt;</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <FOREACH>
            <_name>25</_name>
            <_property />
            <IF>
              <_name>154</_name>
              <_property />
            </IF>
          </FOREACH>
        </FUNCTION>
        <FUNCTION>
          <_name>Keyword2Enum</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>SType</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>20</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <SWTICH>
            <_name>3</_name>
            <_property />
          </SWTICH>
        </FUNCTION>
        <FUNCTION>
          <_name>MakeKerword</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>Scope</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>13</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>uint</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.uint</URL>
              <TYPE>uint</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>uint</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.uint</URL>
              <TYPE>uint</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>155</_name>
            <_property />
          </IF>
        </FUNCTION>
        <FUNCTION>
          <_name>AddChild</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>3</SIZE>
          </_property>
          <ARGUMENT>
            <_name>Scope</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.Scope</URL>
              <TYPE>Scope</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>IsContain</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>5</COMPLEXITY>
            <SIZE>13</SIZE>
          </_property>
          <ARGUMENT>
            <_name>Scope</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.Scope</URL>
              <TYPE>Scope</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>Scope</_name>
            <_property>
              <URL>CodeAnalyzer.Scope.Scope</URL>
              <TYPE>Scope</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>156</_name>
            <_property />
          </IF>
          <OTHER>
            <_name>52</_name>
            <_property />
            <FOREACH>
              <_name>26</_name>
              <_property />
              <IF>
                <_name>157</_name>
                <_property />
              </IF>
            </FOREACH>
          </OTHER>
        </FUNCTION>
        <PROPERTY>
          <_name>Parent</_name>
          <_property>
            <URL>CodeAnalyzer.Scope.Parent</URL>
            <TYPE>Scope</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </PROPERTY>
        <MEMBER>
          <_name>Parent</_name>
          <_property>
            <URL>CodeAnalyzer.Scope.Parent</URL>
            <TYPE>Scope</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <PROPERTY>
          <_name>Child</_name>
          <_property>
            <URL>CodeAnalyzer.Scope.Child</URL>
            <TYPE>List&lt;Scope&gt;</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>53</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <FUNCTION>
          <_name>IsGeneralRelationship</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>4</SIZE>
          </_property>
        </FUNCTION>
        <FUNCTION>
          <_name>IsGeneralClass</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>3</SIZE>
          </_property>
        </FUNCTION>
        <FUNCTION>
          <_name>IsGeneralFunction</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>3</SIZE>
          </_property>
        </FUNCTION>
        <FUNCTION>
          <_name>IsGeneralNamespace</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
        </FUNCTION>
        <MEMBER>
          <_name>_Child</_name>
          <_property>
            <URL>CodeAnalyzer.Scope._Child</URL>
            <TYPE>List&lt;Scope&gt;</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>private</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>True</ISCREATED>
          </_property>
        </MEMBER>
        <STATEMENT_AGGREGATION>
          <_name>Dictionary&lt;string,string&gt;</_name>
          <_property>
            <URL>CodeAnalyzer.Scope.Dictionary&lt;string,string&gt;</URL>
          </_property>
        </STATEMENT_AGGREGATION>
        <STATEMENT_AGGREGATION>
          <_name>Dictionary&lt;SType,int&gt;</_name>
          <_property>
            <URL>CodeAnalyzer.Scope.Dictionary&lt;SType,int&gt;</URL>
          </_property>
        </STATEMENT_AGGREGATION>
        <STATEMENT_AGGREGATION>
          <_name>List&lt;Scope&gt;</_name>
          <_property>
            <URL>CodeAnalyzer.Scope.List&lt;Scope&gt;</URL>
          </_property>
        </STATEMENT_AGGREGATION>
        <STATEMENT_COMPOSTION>
          <_name>uint</_name>
          <_property>
            <URL>CodeAnalyzer.Scope.uint</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>uint</_name>
          <_property>
            <URL>CodeAnalyzer.Scope.uint</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>SType</_name>
          <_property>
            <URL>CodeAnalyzer.Scope.SType</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>string</_name>
          <_property>
            <URL>CodeAnalyzer.Scope.string</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>string[]</_name>
          <_property>
            <URL>CodeAnalyzer.Scope.string[]</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>Scope</_name>
          <_property>
            <URL>CodeAnalyzer.Scope.Scope</URL>
          </_property>
        </STATEMENT_COMPOSTION>
      </CLASS>
      <CLASS>
        <_name>SemiExtractor</_name>
        <_property>
          <URL>CodeAnalyzer.SemiExtractor</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks,CStoker,CSsemi</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\SemiExpression.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalyzer.SemiExtractor.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>SemiExtractor</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>SemiExtractor</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
        </FUNCTION>
        <FUNCTION>
          <_name>Open</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.SemiExtractor.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>GetNextSemi</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>SemiExpression</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>7</COMPLEXITY>
            <SIZE>34</SIZE>
          </_property>
          <IF>
            <_name>173</_name>
            <_property />
          </IF>
          <FOR>
            <_name>21</_name>
            <_property />
          </FOR>
          <IF>
            <_name>174</_name>
            <_property />
            <IF>
              <_name>175</_name>
              <_property />
              <IF>
                <_name>176</_name>
                <_property />
              </IF>
              <FOR>
                <_name>22</_name>
                <_property />
              </FOR>
            </IF>
          </IF>
        </FUNCTION>
        <MEMBER>
          <_name>Semi</_name>
          <_property>
            <URL>CodeAnalyzer.SemiExtractor.Semi</URL>
            <TYPE>CSemiExp</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>private</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>True</ISCREATED>
          </_property>
        </MEMBER>
        <STATEMENT_AGGREGATION>
          <_name>CSemiExp</_name>
          <_property>
            <URL>CodeAnalyzer.SemiExtractor.CSemiExp</URL>
          </_property>
        </STATEMENT_AGGREGATION>
      </CLASS>
      <CLASS>
        <_name>SemiExpression</_name>
        <_property>
          <URL>CodeAnalyzer.SemiExpression</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks,CStoker,CSsemi</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\SemiExpression.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalyzer.SemiExpression.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <MEMBER>
          <_name>_tokens</_name>
          <_property>
            <URL>CodeAnalyzer.SemiExpression._tokens</URL>
            <TYPE>List&lt;string&gt;</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>True</ISCREATED>
          </_property>
        </MEMBER>
        <PROPERTY>
          <_name>Tokens</_name>
          <_property>
            <URL>CodeAnalyzer.SemiExpression.Tokens</URL>
            <TYPE>List&lt;string&gt;</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>60</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <MEMBER>
          <_name>_linecount</_name>
          <_property>
            <URL>CodeAnalyzer.SemiExpression._linecount</URL>
            <TYPE>uint</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <PROPERTY>
          <_name>LineCount</_name>
          <_property>
            <URL>CodeAnalyzer.SemiExpression.LineCount</URL>
            <TYPE>uint</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>61</_name>
            <_property />
          </OTHER>
          <OTHER>
            <_name>62</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <FUNCTION>
          <_name>Print</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>5</SIZE>
          </_property>
          <FOREACH>
            <_name>29</_name>
            <_property />
          </FOREACH>
        </FUNCTION>
        <FUNCTION>
          <_name>Contains</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.SemiExpression.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>IsInRange</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>5</SIZE>
          </_property>
          <ARGUMENT>
            <_name>int</_name>
            <_property>
              <URL>CodeAnalyzer.SemiExpression.int</URL>
              <TYPE>int</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>177</_name>
            <_property />
          </IF>
        </FUNCTION>
        <PROPERTY>
          <_name>Count</_name>
          <_property>
            <URL>CodeAnalyzer.SemiExpression.Count</URL>
            <TYPE>int</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>63</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <FUNCTION>
          <_name>FindToken</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>int</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.SemiExpression.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>FindLastToken</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>int</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.SemiExpression.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>FindFirstToken</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>int</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.SemiExpression.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>Add</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>6</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.SemiExpression.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <PROPERTY>
          <_name>this[inti]</_name>
          <_property>
            <URL>CodeAnalyzer.SemiExpression.this[inti]</URL>
            <TYPE>string</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>64</_name>
            <_property />
          </OTHER>
          <OTHER>
            <_name>65</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <FUNCTION>
          <_name>EraseMacro</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>3</COMPLEXITY>
            <SIZE>10</SIZE>
          </_property>
          <IF>
            <_name>178</_name>
            <_property />
            <IF>
              <_name>179</_name>
              <_property />
            </IF>
          </IF>
        </FUNCTION>
        <FUNCTION>
          <_name>EraseStrings</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
        </FUNCTION>
        <FUNCTION>
          <_name>EraseComments</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
        </FUNCTION>
        <FUNCTION>
          <_name>EraseNewLine</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
        </FUNCTION>
        <FUNCTION>
          <_name>Merge</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
        </FUNCTION>
        <STATEMENT_AGGREGATION>
          <_name>List&lt;string&gt;</_name>
          <_property>
            <URL>CodeAnalyzer.SemiExpression.List&lt;string&gt;</URL>
          </_property>
        </STATEMENT_AGGREGATION>
        <STATEMENT_COMPOSTION>
          <_name>uint</_name>
          <_property>
            <URL>CodeAnalyzer.SemiExpression.uint</URL>
          </_property>
        </STATEMENT_COMPOSTION>
      </CLASS>
      <CLASS>
        <_name>TestSemi</_name>
        <_property>
          <URL>CodeAnalyzer.TestSemi</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks,CStoker,CSsemi</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\SemiExpression.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalyzer.TestSemi.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Main</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>23</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string[]</_name>
            <_property>
              <URL>CodeAnalyzer.TestSemi.string[]</URL>
              <TYPE>string[]</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <FOREACH>
            <_name>30</_name>
            <_property />
          </FOREACH>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>TokensUtil</_name>
        <_property>
          <URL>CodeAnalyzer.TokensUtil</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\TokensUtil.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalyzer.TokensUtil.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>Copy</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>List&lt;string&gt;</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>7</SIZE>
          </_property>
          <ARGUMENT>
            <_name>List&lt;string&gt;</_name>
            <_property>
              <URL>CodeAnalyzer.TokensUtil.List&lt;string&gt;</URL>
              <TYPE>List&lt;string&gt;</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <FOREACH>
            <_name>31</_name>
            <_property />
          </FOREACH>
        </FUNCTION>
        <FUNCTION>
          <_name>isComment</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>6</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.TokensUtil.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>180</_name>
            <_property />
          </IF>
        </FUNCTION>
        <FUNCTION>
          <_name>EraseComments</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>List&lt;string&gt;</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>4</COMPLEXITY>
            <SIZE>15</SIZE>
          </_property>
          <ARGUMENT>
            <_name>List&lt;string&gt;</_name>
            <_property>
              <URL>CodeAnalyzer.TokensUtil.List&lt;string&gt;</URL>
              <TYPE>List&lt;string&gt;</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <FOREACH>
            <_name>32</_name>
            <_property />
            <IF>
              <_name>181</_name>
              <_property />
            </IF>
          </FOREACH>
          <FOREACH>
            <_name>33</_name>
            <_property />
          </FOREACH>
        </FUNCTION>
        <FUNCTION>
          <_name>EraseNewLine</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>List&lt;string&gt;</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>3</COMPLEXITY>
            <SIZE>11</SIZE>
          </_property>
          <ARGUMENT>
            <_name>List&lt;string&gt;</_name>
            <_property>
              <URL>CodeAnalyzer.TokensUtil.List&lt;string&gt;</URL>
              <TYPE>List&lt;string&gt;</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <FOREACH>
            <_name>34</_name>
            <_property />
            <IF>
              <_name>182</_name>
              <_property />
            </IF>
          </FOREACH>
        </FUNCTION>
        <FUNCTION>
          <_name>EraseStrings</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>List&lt;string&gt;</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>12</COMPLEXITY>
            <SIZE>44</SIZE>
          </_property>
          <ARGUMENT>
            <_name>List&lt;string&gt;</_name>
            <_property>
              <URL>CodeAnalyzer.TokensUtil.List&lt;string&gt;</URL>
              <TYPE>List&lt;string&gt;</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <FOR>
            <_name>23</_name>
            <_property />
            <FOR>
              <_name>24</_name>
              <_property />
              <IF>
                <_name>183</_name>
                <_property />
                <IF>
                  <_name>184</_name>
                  <_property />
                </IF>
              </IF>
              <IF>
                <_name>185</_name>
                <_property />
                <IF>
                  <_name>186</_name>
                  <_property />
                </IF>
              </IF>
              <OTHER>
                <_name>66</_name>
                <_property />
                <IF>
                  <_name>187</_name>
                  <_property />
                </IF>
              </OTHER>
            </FOR>
            <IF>
              <_name>188</_name>
              <_property />
              <FOR>
                <_name>25</_name>
                <_property />
                <IF>
                  <_name>189</_name>
                  <_property />
                </IF>
              </FOR>
            </IF>
          </FOR>
        </FUNCTION>
        <FUNCTION>
          <_name>Merge</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>List&lt;string&gt;</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>11</COMPLEXITY>
            <SIZE>50</SIZE>
          </_property>
          <ARGUMENT>
            <_name>List&lt;string&gt;</_name>
            <_property>
              <URL>CodeAnalyzer.TokensUtil.List&lt;string&gt;</URL>
              <TYPE>List&lt;string&gt;</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <FOR>
            <_name>26</_name>
            <_property />
            <IF>
              <_name>190</_name>
              <_property />
            </IF>
            <IF>
              <_name>191</_name>
              <_property />
              <IF>
                <_name>192</_name>
                <_property />
              </IF>
              <IF>
                <_name>193</_name>
                <_property />
              </IF>
            </IF>
            <IF>
              <_name>194</_name>
              <_property />
              <IF>
                <_name>195</_name>
                <_property />
              </IF>
              <IF>
                <_name>196</_name>
                <_property />
              </IF>
            </IF>
            <IF>
              <_name>197</_name>
              <_property />
            </IF>
            <IF>
              <_name>198</_name>
              <_property />
            </IF>
          </FOR>
        </FUNCTION>
        <FUNCTION>
          <_name>EraseBetween</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>List&lt;string&gt;</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>5</COMPLEXITY>
            <SIZE>25</SIZE>
          </_property>
          <ARGUMENT>
            <_name>List&lt;string&gt;</_name>
            <_property>
              <URL>CodeAnalyzer.TokensUtil.List&lt;string&gt;</URL>
              <TYPE>List&lt;string&gt;</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.TokensUtil.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalyzer.TokensUtil.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <FOR>
            <_name>27</_name>
            <_property />
            <IF>
              <_name>199</_name>
              <_property />
            </IF>
            <IF>
              <_name>200</_name>
              <_property />
            </IF>
            <IF>
              <_name>201</_name>
              <_property />
            </IF>
          </FOR>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>TestTokenutil</_name>
        <_property>
          <URL>CodeAnalyzer.TestTokenutil</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text,System.Threading.Tasks</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\TokensUtil.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalyzer.TestTokenutil.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>ShowTokens</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>6</SIZE>
          </_property>
          <ARGUMENT>
            <_name>List&lt;string&gt;</_name>
            <_property>
              <URL>CodeAnalyzer.TestTokenutil.List&lt;string&gt;</URL>
              <TYPE>List&lt;string&gt;</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <FOREACH>
            <_name>35</_name>
            <_property />
          </FOREACH>
        </FUNCTION>
        <FUNCTION>
          <_name>TestEraseNewLine</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>13</SIZE>
          </_property>
        </FUNCTION>
        <FUNCTION>
          <_name>TestMerge</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>16</SIZE>
          </_property>
        </FUNCTION>
        <FUNCTION>
          <_name>TestInBetween</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>12</SIZE>
          </_property>
        </FUNCTION>
        <FUNCTION>
          <_name>Main</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>6</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string[]</_name>
            <_property>
              <URL>CodeAnalyzer.TestTokenutil.string[]</URL>
              <TYPE>string[]</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
      </CLASS>
    </NAMESPACE>
    <NAMESPACE>
      <_name>CSsemi</_name>
      <_property>
        <URL>CSsemi</URL>
      </_property>
      <CLASS>
        <_name>CSemiExp</_name>
        <_property>
          <URL>CSsemi.CSemiExp</URL>
          <USINGNAMESPACE>System,System.Collections,System.Collections.Generic,System.Text,CStoker</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Semi.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CSsemi.CSemiExp.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <MEMBER>
          <_name>toker</_name>
          <_property>
            <URL>CSsemi.CSemiExp.toker</URL>
            <TYPE>CToker</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>True</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>semiExp</_name>
          <_property>
            <URL>CSsemi.CSemiExp.semiExp</URL>
            <TYPE>List&lt;string&gt;</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>True</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>currTok</_name>
          <_property>
            <URL>CSsemi.CSemiExp.currTok</URL>
            <TYPE>string</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>prevTok</_name>
          <_property>
            <URL>CSsemi.CSemiExp.prevTok</URL>
            <TYPE>string</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <PROPERTY>
          <_name>lineCount</_name>
          <_property>
            <URL>CSsemi.CSemiExp.lineCount</URL>
            <TYPE>int</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>55</_name>
            <_property />
          </OTHER>
          <OTHER>
            <_name>90</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <FUNCTION>
          <_name>CSemiExp</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>CSemiExp</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>6</SIZE>
          </_property>
        </FUNCTION>
        <FUNCTION>
          <_name>Equals</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>5</COMPLEXITY>
            <SIZE>8</SIZE>
          </_property>
          <ARGUMENT>
            <_name>Object</_name>
            <_property>
              <URL>CSsemi.CSemiExp.Object</URL>
              <TYPE>Object</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>158</_name>
            <_property />
          </IF>
          <FOR>
            <_name>16</_name>
            <_property />
          </FOR>
          <IF>
            <_name>262</_name>
            <_property />
          </IF>
          <FOR>
            <_name>39</_name>
            <_property />
          </FOR>
        </FUNCTION>
        <FUNCTION>
          <_name>FindFirst</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>int</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>3</COMPLEXITY>
            <SIZE>5</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CSsemi.CSemiExp.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <FOR>
            <_name>17</_name>
            <_property />
          </FOR>
          <FOR>
            <_name>40</_name>
            <_property />
          </FOR>
        </FUNCTION>
        <FUNCTION>
          <_name>FindLast</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>int</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>3</COMPLEXITY>
            <SIZE>5</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CSsemi.CSemiExp.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <FOR>
            <_name>18</_name>
            <_property />
          </FOR>
          <FOR>
            <_name>41</_name>
            <_property />
          </FOR>
        </FUNCTION>
        <FUNCTION>
          <_name>Contains</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>int</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CSsemi.CSemiExp.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>GetHashCode</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>System.Int32</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
        </FUNCTION>
        <FUNCTION>
          <_name>open</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CSsemi.CSemiExp.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>close</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
        </FUNCTION>
        <FUNCTION>
          <_name>isTerminator</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>5</COMPLEXITY>
            <SIZE>12</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CSsemi.CSemiExp.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <SWTICH>
            <_name>4</_name>
            <_property />
            <IF>
              <_name>159</_name>
              <_property />
            </IF>
          </SWTICH>
          <SWTICH>
            <_name>5</_name>
            <_property />
            <IF>
              <_name>263</_name>
              <_property />
            </IF>
          </SWTICH>
        </FUNCTION>
        <FUNCTION>
          <_name>get</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>string</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>3</COMPLEXITY>
            <SIZE>6</SIZE>
          </_property>
          <IF>
            <_name>160</_name>
            <_property />
          </IF>
          <IF>
            <_name>264</_name>
            <_property />
          </IF>
        </FUNCTION>
        <FUNCTION>
          <_name>IsPunc</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
          <ARGUMENT>
            <_name>char</_name>
            <_property>
              <URL>CSsemi.CSemiExp.char</URL>
              <TYPE>char</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>IsOperatorPair</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>3</COMPLEXITY>
            <SIZE>14</SIZE>
          </_property>
          <ARGUMENT>
            <_name>char</_name>
            <_property>
              <URL>CSsemi.CSemiExp.char</URL>
              <TYPE>char</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>char</_name>
            <_property>
              <URL>CSsemi.CSemiExp.char</URL>
              <TYPE>char</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <FOREACH>
            <_name>27</_name>
            <_property />
          </FOREACH>
          <FOREACH>
            <_name>44</_name>
            <_property />
          </FOREACH>
        </FUNCTION>
        <FUNCTION>
          <_name>getSemi</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>11</COMPLEXITY>
            <SIZE>25</SIZE>
          </_property>
          <OTHER>
            <_name>56</_name>
            <_property />
            <IF>
              <_name>161</_name>
              <_property />
            </IF>
            <IF>
              <_name>162</_name>
              <_property />
            </IF>
          </OTHER>
          <IF>
            <_name>163</_name>
            <_property />
            <FOR>
              <_name>19</_name>
              <_property />
            </FOR>
          </IF>
          <OTHER>
            <_name>91</_name>
            <_property />
            <IF>
              <_name>265</_name>
              <_property />
            </IF>
            <IF>
              <_name>266</_name>
              <_property />
            </IF>
          </OTHER>
          <IF>
            <_name>267</_name>
            <_property />
            <FOR>
              <_name>42</_name>
              <_property />
            </FOR>
          </IF>
        </FUNCTION>
        <PROPERTY>
          <_name>count</_name>
          <_property>
            <URL>CSsemi.CSemiExp.count</URL>
            <TYPE>int</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>57</_name>
            <_property />
          </OTHER>
          <OTHER>
            <_name>92</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <PROPERTY>
          <_name>this[inti]</_name>
          <_property>
            <URL>CSsemi.CSemiExp.this[inti]</URL>
            <TYPE>string</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>58</_name>
            <_property />
          </OTHER>
          <OTHER>
            <_name>59</_name>
            <_property />
          </OTHER>
          <OTHER>
            <_name>93</_name>
            <_property />
          </OTHER>
          <OTHER>
            <_name>94</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <FUNCTION>
          <_name>insert</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>3</COMPLEXITY>
            <SIZE>7</SIZE>
          </_property>
          <ARGUMENT>
            <_name>int</_name>
            <_property>
              <URL>CSsemi.CSemiExp.int</URL>
              <TYPE>int</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CSsemi.CSemiExp.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>164</_name>
            <_property />
          </IF>
          <IF>
            <_name>268</_name>
            <_property />
          </IF>
        </FUNCTION>
        <FUNCTION>
          <_name>Add</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>CSemiExp</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>10</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CSsemi.CSemiExp.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>initialize</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>3</COMPLEXITY>
            <SIZE>5</SIZE>
          </_property>
          <IF>
            <_name>165</_name>
            <_property />
          </IF>
          <IF>
            <_name>269</_name>
            <_property />
          </IF>
        </FUNCTION>
        <FUNCTION>
          <_name>flush</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
        </FUNCTION>
        <FUNCTION>
          <_name>isComment</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>3</COMPLEXITY>
            <SIZE>6</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CSsemi.CSemiExp.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>166</_name>
            <_property />
          </IF>
          <IF>
            <_name>270</_name>
            <_property />
          </IF>
        </FUNCTION>
        <FUNCTION>
          <_name>display</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>3</SIZE>
          </_property>
        </FUNCTION>
        <FUNCTION>
          <_name>displayStr</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>string</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>5</COMPLEXITY>
            <SIZE>9</SIZE>
          </_property>
          <FOREACH>
            <_name>28</_name>
            <_property />
            <IF>
              <_name>167</_name>
              <_property />
            </IF>
          </FOREACH>
          <FOREACH>
            <_name>45</_name>
            <_property />
            <IF>
              <_name>271</_name>
              <_property />
            </IF>
          </FOREACH>
        </FUNCTION>
        <PROPERTY>
          <_name>verbose</_name>
          <_property>
            <URL>CSsemi.CSemiExp.verbose</URL>
            <TYPE>bool</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </PROPERTY>
        <MEMBER>
          <_name>verbose</_name>
          <_property>
            <URL>CSsemi.CSemiExp.verbose</URL>
            <TYPE>bool</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <PROPERTY>
          <_name>returnNewLines</_name>
          <_property>
            <URL>CSsemi.CSemiExp.returnNewLines</URL>
            <TYPE>bool</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </PROPERTY>
        <MEMBER>
          <_name>returnNewLines</_name>
          <_property>
            <URL>CSsemi.CSemiExp.returnNewLines</URL>
            <TYPE>bool</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <PROPERTY>
          <_name>displayNewLines</_name>
          <_property>
            <URL>CSsemi.CSemiExp.displayNewLines</URL>
            <TYPE>bool</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </PROPERTY>
        <MEMBER>
          <_name>displayNewLines</_name>
          <_property>
            <URL>CSsemi.CSemiExp.displayNewLines</URL>
            <TYPE>bool</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <PROPERTY>
          <_name>discardComments</_name>
          <_property>
            <URL>CSsemi.CSemiExp.discardComments</URL>
            <TYPE>bool</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </PROPERTY>
        <MEMBER>
          <_name>discardComments</_name>
          <_property>
            <URL>CSsemi.CSemiExp.discardComments</URL>
            <TYPE>bool</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <FUNCTION>
          <_name>clone</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>CSemiExp</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>3</COMPLEXITY>
            <SIZE>7</SIZE>
          </_property>
          <FOR>
            <_name>20</_name>
            <_property />
          </FOR>
          <FOR>
            <_name>43</_name>
            <_property />
          </FOR>
        </FUNCTION>
        <FUNCTION>
          <_name>remove</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>5</COMPLEXITY>
            <SIZE>18</SIZE>
          </_property>
          <ARGUMENT>
            <_name>int</_name>
            <_property>
              <URL>CSsemi.CSemiExp.int</URL>
              <TYPE>int</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>168</_name>
            <_property />
          </IF>
          <IF>
            <_name>169</_name>
            <_property />
          </IF>
          <IF>
            <_name>272</_name>
            <_property />
          </IF>
          <IF>
            <_name>273</_name>
            <_property />
          </IF>
        </FUNCTION>
        <FUNCTION>
          <_name>Main</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>7</COMPLEXITY>
            <SIZE>57</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string[]</_name>
            <_property>
              <URL>CSsemi.CSemiExp.string[]</URL>
              <TYPE>string[]</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>170</_name>
            <_property />
          </IF>
          <IF>
            <_name>171</_name>
            <_property />
          </IF>
          <IF>
            <_name>172</_name>
            <_property />
          </IF>
          <IF>
            <_name>274</_name>
            <_property />
          </IF>
          <IF>
            <_name>275</_name>
            <_property />
          </IF>
          <IF>
            <_name>276</_name>
            <_property />
          </IF>
        </FUNCTION>
        <STATEMENT_AGGREGATION>
          <_name>CToker</_name>
          <_property>
            <URL>CSsemi.CSemiExp.CToker</URL>
          </_property>
        </STATEMENT_AGGREGATION>
        <STATEMENT_AGGREGATION>
          <_name>List&lt;string&gt;</_name>
          <_property>
            <URL>CSsemi.CSemiExp.List&lt;string&gt;</URL>
          </_property>
        </STATEMENT_AGGREGATION>
        <STATEMENT_COMPOSTION>
          <_name>string</_name>
          <_property>
            <URL>CSsemi.CSemiExp.string</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>string</_name>
          <_property>
            <URL>CSsemi.CSemiExp.string</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>bool</_name>
          <_property>
            <URL>CSsemi.CSemiExp.bool</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>bool</_name>
          <_property>
            <URL>CSsemi.CSemiExp.bool</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>bool</_name>
          <_property>
            <URL>CSsemi.CSemiExp.bool</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>bool</_name>
          <_property>
            <URL>CSsemi.CSemiExp.bool</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <MEMBER>
          <_name>verbose</_name>
          <_property>
            <URL>CSsemi.CSemiExp.verbose</URL>
            <TYPE>bool</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>returnNewLines</_name>
          <_property>
            <URL>CSsemi.CSemiExp.returnNewLines</URL>
            <TYPE>bool</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>displayNewLines</_name>
          <_property>
            <URL>CSsemi.CSemiExp.displayNewLines</URL>
            <TYPE>bool</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>discardComments</_name>
          <_property>
            <URL>CSsemi.CSemiExp.discardComments</URL>
            <TYPE>bool</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <STATEMENT_AGGREGATION>
          <_name>CToker</_name>
          <_property>
            <URL>CSsemi.CSemiExp.CToker</URL>
          </_property>
        </STATEMENT_AGGREGATION>
        <STATEMENT_AGGREGATION>
          <_name>List&lt;string&gt;</_name>
          <_property>
            <URL>CSsemi.CSemiExp.List&lt;string&gt;</URL>
          </_property>
        </STATEMENT_AGGREGATION>
        <STATEMENT_COMPOSTION>
          <_name>string</_name>
          <_property>
            <URL>CSsemi.CSemiExp.string</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>string</_name>
          <_property>
            <URL>CSsemi.CSemiExp.string</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>bool</_name>
          <_property>
            <URL>CSsemi.CSemiExp.bool</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>bool</_name>
          <_property>
            <URL>CSsemi.CSemiExp.bool</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>bool</_name>
          <_property>
            <URL>CSsemi.CSemiExp.bool</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>bool</_name>
          <_property>
            <URL>CSsemi.CSemiExp.bool</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>bool</_name>
          <_property>
            <URL>CSsemi.CSemiExp.bool</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>bool</_name>
          <_property>
            <URL>CSsemi.CSemiExp.bool</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>bool</_name>
          <_property>
            <URL>CSsemi.CSemiExp.bool</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>bool</_name>
          <_property>
            <URL>CSsemi.CSemiExp.bool</URL>
          </_property>
        </STATEMENT_COMPOSTION>
      </CLASS>
    </NAMESPACE>
    <NAMESPACE>
      <_name>CStoker</_name>
      <_property>
        <URL>CStoker</URL>
      </_property>
      <CLASS>
        <_name>CToker</_name>
        <_property>
          <URL>CStoker.CToker</URL>
          <USINGNAMESPACE>System,System.IO,System.Text,System.Collections,System.Collections.Generic</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample1\Toker.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CStoker.CToker.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <MEMBER>
          <_name>ts</_name>
          <_property>
            <URL>CStoker.CToker.ts</URL>
            <TYPE>TextReader</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>private</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>True</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>tokBuffer</_name>
          <_property>
            <URL>CStoker.CToker.tokBuffer</URL>
            <TYPE>List&lt;string&gt;</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>private</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>True</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>lineRemainder</_name>
          <_property>
            <URL>CStoker.CToker.lineRemainder</URL>
            <TYPE>string</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>private</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <PROPERTY>
          <_name>lineCount</_name>
          <_property>
            <URL>CStoker.CToker.lineCount</URL>
            <TYPE>int</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </PROPERTY>
        <MEMBER>
          <_name>lineCount</_name>
          <_property>
            <URL>CStoker.CToker.lineCount</URL>
            <TYPE>int</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <FUNCTION>
          <_name>CToker</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>CToker</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>3</SIZE>
          </_property>
        </FUNCTION>
        <FUNCTION>
          <_name>openFile</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>5</COMPLEXITY>
            <SIZE>11</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CStoker.CToker.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <TRY>
            <_name>3</_name>
            <_property />
          </TRY>
          <CATCH>
            <_name>3</_name>
            <_property />
          </CATCH>
          <TRY>
            <_name>9</_name>
            <_property />
          </TRY>
          <CATCH>
            <_name>9</_name>
            <_property />
          </CATCH>
        </FUNCTION>
        <FUNCTION>
          <_name>openString</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>5</COMPLEXITY>
            <SIZE>10</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CStoker.CToker.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <TRY>
            <_name>4</_name>
            <_property />
          </TRY>
          <CATCH>
            <_name>4</_name>
            <_property />
          </CATCH>
          <TRY>
            <_name>10</_name>
            <_property />
          </TRY>
          <CATCH>
            <_name>10</_name>
            <_property />
          </CATCH>
        </FUNCTION>
        <FUNCTION>
          <_name>close</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>1</SIZE>
          </_property>
        </FUNCTION>
        <FUNCTION>
          <_name>removeReturn</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>9</COMPLEXITY>
            <SIZE>19</SIZE>
          </_property>
          <ARGUMENT>
            <_name>StringBuilder</_name>
            <_property>
              <URL>CStoker.CToker.StringBuilder</URL>
              <TYPE>StringBuilder</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <FOR>
            <_name>28</_name>
            <_property />
            <IF>
              <_name>202</_name>
              <_property />
            </IF>
          </FOR>
          <FOR>
            <_name>29</_name>
            <_property />
            <IF>
              <_name>203</_name>
              <_property />
            </IF>
          </FOR>
          <FOR>
            <_name>44</_name>
            <_property />
            <IF>
              <_name>277</_name>
              <_property />
            </IF>
          </FOR>
          <FOR>
            <_name>45</_name>
            <_property />
            <IF>
              <_name>278</_name>
              <_property />
            </IF>
          </FOR>
        </FUNCTION>
        <FUNCTION>
          <_name>readLine</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>string</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>11</COMPLEXITY>
            <SIZE>18</SIZE>
          </_property>
          <OTHER>
            <_name>67</_name>
            <_property />
            <IF>
              <_name>204</_name>
              <_property />
            </IF>
            <IF>
              <_name>205</_name>
              <_property />
            </IF>
            <LOOPBREAK>
              <_name>9</_name>
              <_property />
            </LOOPBREAK>
            <IF>
              <_name>206</_name>
              <_property />
            </IF>
          </OTHER>
          <OTHER>
            <_name>95</_name>
            <_property />
            <IF>
              <_name>279</_name>
              <_property />
            </IF>
            <IF>
              <_name>280</_name>
              <_property />
            </IF>
            <LOOPBREAK>
              <_name>12</_name>
              <_property />
            </LOOPBREAK>
            <IF>
              <_name>281</_name>
              <_property />
            </IF>
          </OTHER>
        </FUNCTION>
        <FUNCTION>
          <_name>getLine</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>11</COMPLEXITY>
            <SIZE>27</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CStoker.CToker.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <OTHER>
            <_name>68</_name>
            <_property />
            <IF>
              <_name>207</_name>
              <_property />
              <TRY>
                <_name>5</_name>
                <_property />
                <IF>
                  <_name>208</_name>
                  <_property />
                </IF>
              </TRY>
              <CATCH>
                <_name>5</_name>
                <_property />
              </CATCH>
            </IF>
          </OTHER>
          <OTHER>
            <_name>96</_name>
            <_property />
            <IF>
              <_name>282</_name>
              <_property />
              <TRY>
                <_name>11</_name>
                <_property />
                <IF>
                  <_name>283</_name>
                  <_property />
                </IF>
              </TRY>
              <CATCH>
                <_name>11</_name>
                <_property />
              </CATCH>
            </IF>
          </OTHER>
        </FUNCTION>
        <FUNCTION>
          <_name>extract</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>string</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>13</COMPLEXITY>
            <SIZE>34</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CStoker.CToker.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>209</_name>
            <_property />
          </IF>
          <FOR>
            <_name>30</_name>
            <_property />
          </FOR>
          <IF>
            <_name>210</_name>
            <_property />
          </IF>
          <IF>
            <_name>211</_name>
            <_property />
          </IF>
          <IF>
            <_name>212</_name>
            <_property />
          </IF>
          <IF>
            <_name>213</_name>
            <_property />
          </IF>
          <IF>
            <_name>284</_name>
            <_property />
          </IF>
          <FOR>
            <_name>46</_name>
            <_property />
          </FOR>
          <IF>
            <_name>285</_name>
            <_property />
          </IF>
          <IF>
            <_name>286</_name>
            <_property />
          </IF>
          <IF>
            <_name>287</_name>
            <_property />
          </IF>
          <IF>
            <_name>288</_name>
            <_property />
          </IF>
        </FUNCTION>
        <FUNCTION>
          <_name>extractDQuote</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>string</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>11</COMPLEXITY>
            <SIZE>27</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CStoker.CToker.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>214</_name>
            <_property />
            <FOR>
              <_name>31</_name>
              <_property />
              <IF>
                <_name>215</_name>
                <_property />
                <IF>
                  <_name>216</_name>
                  <_property />
                </IF>
              </IF>
            </FOR>
          </IF>
          <OTHER>
            <_name>69</_name>
            <_property />
          </OTHER>
          <IF>
            <_name>289</_name>
            <_property />
            <FOR>
              <_name>47</_name>
              <_property />
              <IF>
                <_name>290</_name>
                <_property />
                <IF>
                  <_name>291</_name>
                  <_property />
                </IF>
              </IF>
            </FOR>
          </IF>
          <OTHER>
            <_name>97</_name>
            <_property />
          </OTHER>
        </FUNCTION>
        <FUNCTION>
          <_name>extractSQuote</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>string</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>11</COMPLEXITY>
            <SIZE>27</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CStoker.CToker.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>217</_name>
            <_property />
            <FOR>
              <_name>32</_name>
              <_property />
              <IF>
                <_name>218</_name>
                <_property />
                <IF>
                  <_name>219</_name>
                  <_property />
                </IF>
              </IF>
            </FOR>
          </IF>
          <OTHER>
            <_name>70</_name>
            <_property />
          </OTHER>
          <IF>
            <_name>292</_name>
            <_property />
            <FOR>
              <_name>48</_name>
              <_property />
              <IF>
                <_name>293</_name>
                <_property />
                <IF>
                  <_name>294</_name>
                  <_property />
                </IF>
              </IF>
            </FOR>
          </IF>
          <OTHER>
            <_name>98</_name>
            <_property />
          </OTHER>
        </FUNCTION>
        <FUNCTION>
          <_name>extractComment</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>string</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>15</COMPLEXITY>
            <SIZE>45</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CStoker.CToker.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>220</_name>
            <_property />
            <IF>
              <_name>221</_name>
              <_property />
            </IF>
            <OTHER>
              <_name>71</_name>
              <_property />
            </OTHER>
          </IF>
          <IF>
            <_name>222</_name>
            <_property />
          </IF>
          <IF>
            <_name>223</_name>
            <_property />
            <IF>
              <_name>224</_name>
              <_property />
            </IF>
            <OTHER>
              <_name>72</_name>
              <_property />
            </OTHER>
          </IF>
          <IF>
            <_name>295</_name>
            <_property />
            <IF>
              <_name>296</_name>
              <_property />
            </IF>
            <OTHER>
              <_name>99</_name>
              <_property />
            </OTHER>
          </IF>
          <IF>
            <_name>297</_name>
            <_property />
          </IF>
          <IF>
            <_name>298</_name>
            <_property />
            <IF>
              <_name>299</_name>
              <_property />
            </IF>
            <OTHER>
              <_name>100</_name>
              <_property />
            </OTHER>
          </IF>
        </FUNCTION>
        <FUNCTION>
          <_name>eatCComment</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>11</COMPLEXITY>
            <SIZE>28</SIZE>
          </_property>
          <OTHER>
            <_name>73</_name>
            <_property />
            <FOR>
              <_name>33</_name>
              <_property />
              <IF>
                <_name>225</_name>
                <_property />
              </IF>
              <OTHER>
                <_name>74</_name>
                <_property />
              </OTHER>
            </FOR>
            <IF>
              <_name>226</_name>
              <_property />
            </IF>
          </OTHER>
          <OTHER>
            <_name>101</_name>
            <_property />
            <FOR>
              <_name>49</_name>
              <_property />
              <IF>
                <_name>300</_name>
                <_property />
              </IF>
              <OTHER>
                <_name>102</_name>
                <_property />
              </OTHER>
            </FOR>
            <IF>
              <_name>301</_name>
              <_property />
            </IF>
          </OTHER>
        </FUNCTION>
        <FUNCTION>
          <_name>IsGrammarPunctuation</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>5</COMPLEXITY>
            <SIZE>5</SIZE>
          </_property>
          <ARGUMENT>
            <_name>char</_name>
            <_property>
              <URL>CStoker.CToker.char</URL>
              <TYPE>char</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>227</_name>
            <_property />
          </IF>
          <IF>
            <_name>228</_name>
            <_property />
          </IF>
          <IF>
            <_name>302</_name>
            <_property />
          </IF>
          <IF>
            <_name>303</_name>
            <_property />
          </IF>
        </FUNCTION>
        <FUNCTION>
          <_name>eatAscii</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>string</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>5</COMPLEXITY>
            <SIZE>12</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CStoker.CToker.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <FOR>
            <_name>34</_name>
            <_property />
            <IF>
              <_name>229</_name>
              <_property />
            </IF>
          </FOR>
          <FOR>
            <_name>50</_name>
            <_property />
            <IF>
              <_name>304</_name>
              <_property />
            </IF>
          </FOR>
        </FUNCTION>
        <FUNCTION>
          <_name>eatPunctuationChar</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>string</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>3</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CStoker.CToker.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>fillBuffer</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>13</COMPLEXITY>
            <SIZE>25</SIZE>
          </_property>
          <IF>
            <_name>230</_name>
            <_property />
          </IF>
          <IF>
            <_name>231</_name>
            <_property />
          </IF>
          <FOREACH>
            <_name>36</_name>
            <_property />
            <OTHER>
              <_name>75</_name>
              <_property />
              <IF>
                <_name>232</_name>
                <_property />
              </IF>
              <OTHER>
                <_name>76</_name>
                <_property />
              </OTHER>
            </OTHER>
          </FOREACH>
          <IF>
            <_name>305</_name>
            <_property />
          </IF>
          <IF>
            <_name>306</_name>
            <_property />
          </IF>
          <FOREACH>
            <_name>46</_name>
            <_property />
            <OTHER>
              <_name>103</_name>
              <_property />
              <IF>
                <_name>307</_name>
                <_property />
              </IF>
              <OTHER>
                <_name>104</_name>
                <_property />
              </OTHER>
            </OTHER>
          </FOREACH>
        </FUNCTION>
        <FUNCTION>
          <_name>getTok</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>string</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>5</COMPLEXITY>
            <SIZE>10</SIZE>
          </_property>
          <IF>
            <_name>233</_name>
            <_property />
          </IF>
          <IF>
            <_name>234</_name>
            <_property />
          </IF>
          <IF>
            <_name>308</_name>
            <_property />
          </IF>
          <IF>
            <_name>309</_name>
            <_property />
          </IF>
        </FUNCTION>
        <FUNCTION>
          <_name>peekNextTok</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>string</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>3</COMPLEXITY>
            <SIZE>5</SIZE>
          </_property>
          <IF>
            <_name>235</_name>
            <_property />
          </IF>
          <IF>
            <_name>310</_name>
            <_property />
          </IF>
        </FUNCTION>
        <FUNCTION>
          <_name>pushBack</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>1</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CStoker.CToker.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>Main</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>25</COMPLEXITY>
            <SIZE>80</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string[]</_name>
            <_property>
              <URL>CStoker.CToker.string[]</URL>
              <TYPE>string[]</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <TRY>
            <_name>6</_name>
            <_property />
            <IF>
              <_name>236</_name>
              <_property />
            </IF>
            <FOREACH>
              <_name>37</_name>
              <_property />
              <IF>
                <_name>237</_name>
                <_property />
              </IF>
              <OTHER>
                <_name>77</_name>
                <_property />
                <IF>
                  <_name>238</_name>
                  <_property />
                </IF>
              </OTHER>
            </FOREACH>
            <FOREACH>
              <_name>38</_name>
              <_property />
              <IF>
                <_name>239</_name>
                <_property />
              </IF>
              <OTHER>
                <_name>78</_name>
                <_property />
                <OTHER>
                  <_name>79</_name>
                  <_property />
                  <IF>
                    <_name>240</_name>
                    <_property />
                  </IF>
                </OTHER>
              </OTHER>
            </FOREACH>
          </TRY>
          <CATCH>
            <_name>6</_name>
            <_property />
          </CATCH>
          <TRY>
            <_name>12</_name>
            <_property />
            <IF>
              <_name>311</_name>
              <_property />
            </IF>
            <FOREACH>
              <_name>47</_name>
              <_property />
              <IF>
                <_name>312</_name>
                <_property />
              </IF>
              <OTHER>
                <_name>105</_name>
                <_property />
                <IF>
                  <_name>313</_name>
                  <_property />
                </IF>
              </OTHER>
            </FOREACH>
            <FOREACH>
              <_name>48</_name>
              <_property />
              <IF>
                <_name>314</_name>
                <_property />
              </IF>
              <OTHER>
                <_name>106</_name>
                <_property />
                <OTHER>
                  <_name>107</_name>
                  <_property />
                  <IF>
                    <_name>315</_name>
                    <_property />
                  </IF>
                </OTHER>
              </OTHER>
            </FOREACH>
          </TRY>
          <CATCH>
            <_name>12</_name>
            <_property />
          </CATCH>
        </FUNCTION>
        <STATEMENT_AGGREGATION>
          <_name>TextReader</_name>
          <_property>
            <URL>CStoker.CToker.TextReader</URL>
          </_property>
        </STATEMENT_AGGREGATION>
        <STATEMENT_AGGREGATION>
          <_name>List&lt;string&gt;</_name>
          <_property>
            <URL>CStoker.CToker.List&lt;string&gt;</URL>
          </_property>
        </STATEMENT_AGGREGATION>
        <STATEMENT_COMPOSTION>
          <_name>string</_name>
          <_property>
            <URL>CStoker.CToker.string</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>int</_name>
          <_property>
            <URL>CStoker.CToker.int</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <MEMBER>
          <_name>lineCount</_name>
          <_property>
            <URL>CStoker.CToker.lineCount</URL>
            <TYPE>int</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <STATEMENT_AGGREGATION>
          <_name>TextReader</_name>
          <_property>
            <URL>CStoker.CToker.TextReader</URL>
          </_property>
        </STATEMENT_AGGREGATION>
        <STATEMENT_AGGREGATION>
          <_name>List&lt;string&gt;</_name>
          <_property>
            <URL>CStoker.CToker.List&lt;string&gt;</URL>
          </_property>
        </STATEMENT_AGGREGATION>
        <STATEMENT_COMPOSTION>
          <_name>string</_name>
          <_property>
            <URL>CStoker.CToker.string</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>int</_name>
          <_property>
            <URL>CStoker.CToker.int</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>int</_name>
          <_property>
            <URL>CStoker.CToker.int</URL>
          </_property>
        </STATEMENT_COMPOSTION>
      </CLASS>
    </NAMESPACE>
    <NAMESPACE>
      <_name>CodeAnalysis</_name>
      <_property>
        <URL>CodeAnalysis</URL>
      </_property>
      <INTERFACE>
        <_name>IAction</_name>
        <_property>
          <URL>CodeAnalysis.IAction</URL>
          <USINGNAMESPACE>System,System.Collections,System.Collections.Generic</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample2\IRuleandAction.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalysis.IAction.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
      </INTERFACE>
      <CLASS>
        <_name>AAction</_name>
        <_property>
          <URL>CodeAnalysis.AAction</URL>
          <USINGNAMESPACE>System,System.Collections,System.Collections.Generic</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample2\IRuleandAction.cs</FILENAME>
          <PARENTCLASS>IAction</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>IAction</_name>
          <_property>
            <URL>CodeAnalysis.AAction.IAction</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <MEMBER>
          <_name>displaySemi_</_name>
          <_property>
            <URL>CodeAnalysis.AAction.displaySemi_</URL>
            <TYPE>bool</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>True</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>displayStack_</_name>
          <_property>
            <URL>CodeAnalysis.AAction.displayStack_</URL>
            <TYPE>bool</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>True</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>void</_name>
          <_property>
            <URL>CodeAnalysis.AAction.void</URL>
            <TYPE>abstract</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <PROPERTY>
          <_name>displaySemi</_name>
          <_property>
            <URL>CodeAnalysis.AAction.displaySemi</URL>
            <TYPE>bool</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>True</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>80</_name>
            <_property />
          </OTHER>
          <OTHER>
            <_name>81</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <PROPERTY>
          <_name>displayStack</_name>
          <_property>
            <URL>CodeAnalysis.AAction.displayStack</URL>
            <TYPE>bool</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>True</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>82</_name>
            <_property />
          </OTHER>
          <OTHER>
            <_name>83</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <FUNCTION>
          <_name>display</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>4</SIZE>
          </_property>
          <ARGUMENT>
            <_name>CSsemi.CSemiExp</_name>
            <_property>
              <URL>CodeAnalysis.AAction.CSsemi.CSemiExp</URL>
              <TYPE>CSsemi.CSemiExp</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>241</_name>
            <_property />
          </IF>
        </FUNCTION>
        <STATEMENT_COMPOSTION>
          <_name>bool</_name>
          <_property>
            <URL>CodeAnalysis.AAction.bool</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>bool</_name>
          <_property>
            <URL>CodeAnalysis.AAction.bool</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>abstract</_name>
          <_property>
            <URL>CodeAnalysis.AAction.abstract</URL>
          </_property>
        </STATEMENT_COMPOSTION>
      </CLASS>
      <INTERFACE>
        <_name>IRule</_name>
        <_property>
          <URL>CodeAnalysis.IRule</URL>
          <USINGNAMESPACE>System,System.Collections,System.Collections.Generic</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample2\IRuleandAction.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalysis.IRule.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
      </INTERFACE>
      <CLASS>
        <_name>ARule</_name>
        <_property>
          <URL>CodeAnalysis.ARule</URL>
          <USINGNAMESPACE>System,System.Collections,System.Collections.Generic</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample2\IRuleandAction.cs</FILENAME>
          <PARENTCLASS>IRule</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>IRule</_name>
          <_property>
            <URL>CodeAnalysis.ARule.IRule</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <MEMBER>
          <_name>actions</_name>
          <_property>
            <URL>CodeAnalysis.ARule.actions</URL>
            <TYPE>List&lt;IAction&gt;</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>private</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>True</ISCREATED>
          </_property>
        </MEMBER>
        <FUNCTION>
          <_name>ARule</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>ARule</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
        </FUNCTION>
        <FUNCTION>
          <_name>add</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
          <ARGUMENT>
            <_name>IAction</_name>
            <_property>
              <URL>CodeAnalysis.ARule.IAction</URL>
              <TYPE>IAction</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <MEMBER>
          <_name>bool</_name>
          <_property>
            <URL>CodeAnalysis.ARule.bool</URL>
            <TYPE>abstract</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <FUNCTION>
          <_name>doActions</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>3</SIZE>
          </_property>
          <ARGUMENT>
            <_name>CSsemi.CSemiExp</_name>
            <_property>
              <URL>CodeAnalysis.ARule.CSsemi.CSemiExp</URL>
              <TYPE>CSsemi.CSemiExp</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>indexOfType</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>int</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>10</SIZE>
          </_property>
          <ARGUMENT>
            <_name>CSsemi.CSemiExp</_name>
            <_property>
              <URL>CodeAnalysis.ARule.CSsemi.CSemiExp</URL>
              <TYPE>CSsemi.CSemiExp</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <STATEMENT_AGGREGATION>
          <_name>List&lt;IAction&gt;</_name>
          <_property>
            <URL>CodeAnalysis.ARule.List&lt;IAction&gt;</URL>
          </_property>
        </STATEMENT_AGGREGATION>
        <STATEMENT_COMPOSTION>
          <_name>abstract</_name>
          <_property>
            <URL>CodeAnalysis.ARule.abstract</URL>
          </_property>
        </STATEMENT_COMPOSTION>
      </CLASS>
      <CLASS>
        <_name>Parser</_name>
        <_property>
          <URL>CodeAnalysis.Parser</URL>
          <USINGNAMESPACE>System,System.Collections,System.Collections.Generic,System.Linq,System.Text,System.IO</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample2\Parser.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalysis.Parser.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <MEMBER>
          <_name>Rules</_name>
          <_property>
            <URL>CodeAnalysis.Parser.Rules</URL>
            <TYPE>List&lt;IRule&gt;</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>private</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>True</ISCREATED>
          </_property>
        </MEMBER>
        <FUNCTION>
          <_name>Parser</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>Parser</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
        </FUNCTION>
        <FUNCTION>
          <_name>add</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
          <ARGUMENT>
            <_name>IRule</_name>
            <_property>
              <URL>CodeAnalysis.Parser.IRule</URL>
              <TYPE>IRule</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>parse</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>4</COMPLEXITY>
            <SIZE>10</SIZE>
          </_property>
          <ARGUMENT>
            <_name>CSsemi.CSemiExp</_name>
            <_property>
              <URL>CodeAnalysis.Parser.CSsemi.CSemiExp</URL>
              <TYPE>CSsemi.CSemiExp</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <FOREACH>
            <_name>39</_name>
            <_property />
            <LOOPBREAK>
              <_name>10</_name>
              <_property />
            </LOOPBREAK>
            <IF>
              <_name>242</_name>
              <_property />
            </IF>
          </FOREACH>
        </FUNCTION>
        <STATEMENT_AGGREGATION>
          <_name>List&lt;IRule&gt;</_name>
          <_property>
            <URL>CodeAnalysis.Parser.List&lt;IRule&gt;</URL>
          </_property>
        </STATEMENT_AGGREGATION>
      </CLASS>
      <CLASS>
        <_name>TestParser</_name>
        <_property>
          <URL>CodeAnalysis.TestParser</URL>
          <USINGNAMESPACE>System,System.Collections,System.Collections.Generic,System.Linq,System.Text,System.IO</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample2\Parser.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalysis.TestParser.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>ProcessCommandline</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>List&lt;string&gt;</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>3</COMPLEXITY>
            <SIZE>15</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string[]</_name>
            <_property>
              <URL>CodeAnalysis.TestParser.string[]</URL>
              <TYPE>string[]</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>243</_name>
            <_property />
          </IF>
          <FOR>
            <_name>35</_name>
            <_property />
          </FOR>
        </FUNCTION>
        <FUNCTION>
          <_name>ShowCommandLine</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>8</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string[]</_name>
            <_property>
              <URL>CodeAnalysis.TestParser.string[]</URL>
              <TYPE>string[]</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <FOREACH>
            <_name>40</_name>
            <_property />
          </FOREACH>
        </FUNCTION>
        <FUNCTION>
          <_name>Main</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>6</COMPLEXITY>
            <SIZE>45</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string[]</_name>
            <_property>
              <URL>CodeAnalysis.TestParser.string[]</URL>
              <TYPE>string[]</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <FOREACH>
            <_name>41</_name>
            <_property />
            <IF>
              <_name>244</_name>
              <_property />
            </IF>
            <TRY>
              <_name>7</_name>
              <_property />
            </TRY>
            <CATCH>
              <_name>7</_name>
              <_property />
            </CATCH>
            <FOREACH>
              <_name>42</_name>
              <_property />
            </FOREACH>
          </FOREACH>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>Elem</_name>
        <_property>
          <URL>CodeAnalysis.Elem</URL>
          <USINGNAMESPACE>System,System.Collections,System.Collections.Generic,System.Text</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample2\Sub\RulesAndActions.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalysis.Elem.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <PROPERTY>
          <_name>type</_name>
          <_property>
            <URL>CodeAnalysis.Elem.type</URL>
            <TYPE>string</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </PROPERTY>
        <MEMBER>
          <_name>type</_name>
          <_property>
            <URL>CodeAnalysis.Elem.type</URL>
            <TYPE>string</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <PROPERTY>
          <_name>name</_name>
          <_property>
            <URL>CodeAnalysis.Elem.name</URL>
            <TYPE>string</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </PROPERTY>
        <MEMBER>
          <_name>name</_name>
          <_property>
            <URL>CodeAnalysis.Elem.name</URL>
            <TYPE>string</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <PROPERTY>
          <_name>begin</_name>
          <_property>
            <URL>CodeAnalysis.Elem.begin</URL>
            <TYPE>int</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </PROPERTY>
        <MEMBER>
          <_name>begin</_name>
          <_property>
            <URL>CodeAnalysis.Elem.begin</URL>
            <TYPE>int</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <PROPERTY>
          <_name>end</_name>
          <_property>
            <URL>CodeAnalysis.Elem.end</URL>
            <TYPE>int</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </PROPERTY>
        <MEMBER>
          <_name>end</_name>
          <_property>
            <URL>CodeAnalysis.Elem.end</URL>
            <TYPE>int</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <FUNCTION>
          <_name>ToString</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>string</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>9</SIZE>
          </_property>
        </FUNCTION>
        <STATEMENT_COMPOSTION>
          <_name>string</_name>
          <_property>
            <URL>CodeAnalysis.Elem.string</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>string</_name>
          <_property>
            <URL>CodeAnalysis.Elem.string</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>int</_name>
          <_property>
            <URL>CodeAnalysis.Elem.int</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>int</_name>
          <_property>
            <URL>CodeAnalysis.Elem.int</URL>
          </_property>
        </STATEMENT_COMPOSTION>
      </CLASS>
      <CLASS>
        <_name>Repository</_name>
        <_property>
          <URL>CodeAnalysis.Repository</URL>
          <USINGNAMESPACE>System,System.Collections,System.Collections.Generic,System.Text</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample2\Sub\RulesAndActions.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalysis.Repository.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <MEMBER>
          <_name>stack_</_name>
          <_property>
            <URL>CodeAnalysis.Repository.stack_</URL>
            <TYPE>ScopeStack&lt;Elem&gt;</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>True</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>locations_</_name>
          <_property>
            <URL>CodeAnalysis.Repository.locations_</URL>
            <TYPE>List&lt;Elem&gt;</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>True</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>instance</_name>
          <_property>
            <URL>CodeAnalysis.Repository.instance</URL>
            <TYPE>Repository</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>True</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <FUNCTION>
          <_name>Repository</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>Repository</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
        </FUNCTION>
        <FUNCTION>
          <_name>getInstance</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>Repository</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
        </FUNCTION>
        <PROPERTY>
          <_name>semi</_name>
          <_property>
            <URL>CodeAnalysis.Repository.semi</URL>
            <TYPE>CSsemi.CSemiExp</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </PROPERTY>
        <MEMBER>
          <_name>semi</_name>
          <_property>
            <URL>CodeAnalysis.Repository.semi</URL>
            <TYPE>CSsemi.CSemiExp</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <PROPERTY>
          <_name>lineCount</_name>
          <_property>
            <URL>CodeAnalysis.Repository.lineCount</URL>
            <TYPE>int</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>84</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <PROPERTY>
          <_name>prevLineCount</_name>
          <_property>
            <URL>CodeAnalysis.Repository.prevLineCount</URL>
            <TYPE>int</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </PROPERTY>
        <MEMBER>
          <_name>prevLineCount</_name>
          <_property>
            <URL>CodeAnalysis.Repository.prevLineCount</URL>
            <TYPE>int</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <PROPERTY>
          <_name>stack</_name>
          <_property>
            <URL>CodeAnalysis.Repository.stack</URL>
            <TYPE>ScopeStack&lt;Elem&gt;</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>85</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <PROPERTY>
          <_name>locations</_name>
          <_property>
            <URL>CodeAnalysis.Repository.locations</URL>
            <TYPE>List&lt;Elem&gt;</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>86</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <STATEMENT_AGGREGATION>
          <_name>ScopeStack&lt;Elem&gt;</_name>
          <_property>
            <URL>CodeAnalysis.Repository.ScopeStack&lt;Elem&gt;</URL>
          </_property>
        </STATEMENT_AGGREGATION>
        <STATEMENT_AGGREGATION>
          <_name>List&lt;Elem&gt;</_name>
          <_property>
            <URL>CodeAnalysis.Repository.List&lt;Elem&gt;</URL>
          </_property>
        </STATEMENT_AGGREGATION>
        <STATEMENT_COMPOSTION>
          <_name>Repository</_name>
          <_property>
            <URL>CodeAnalysis.Repository.Repository</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>CSsemi.CSemiExp</_name>
          <_property>
            <URL>CodeAnalysis.Repository.CSsemi.CSemiExp</URL>
          </_property>
        </STATEMENT_COMPOSTION>
        <STATEMENT_COMPOSTION>
          <_name>int</_name>
          <_property>
            <URL>CodeAnalysis.Repository.int</URL>
          </_property>
        </STATEMENT_COMPOSTION>
      </CLASS>
      <CLASS>
        <_name>PushStack</_name>
        <_property>
          <URL>CodeAnalysis.PushStack</URL>
          <USINGNAMESPACE>System,System.Collections,System.Collections.Generic,System.Text</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample2\Sub\RulesAndActions.cs</FILENAME>
          <PARENTCLASS>AAction</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>AAction</_name>
          <_property>
            <URL>CodeAnalysis.PushStack.AAction</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <MEMBER>
          <_name>repo_</_name>
          <_property>
            <URL>CodeAnalysis.PushStack.repo_</URL>
            <TYPE>Repository</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <FUNCTION>
          <_name>PushStack</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>PushStack</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
          <ARGUMENT>
            <_name>Repository</_name>
            <_property>
              <URL>CodeAnalysis.PushStack.Repository</URL>
              <TYPE>Repository</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>doAction</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>4</COMPLEXITY>
            <SIZE>21</SIZE>
          </_property>
          <ARGUMENT>
            <_name>CSsemi.CSemiExp</_name>
            <_property>
              <URL>CodeAnalysis.PushStack.CSsemi.CSemiExp</URL>
              <TYPE>CSsemi.CSemiExp</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>245</_name>
            <_property />
          </IF>
          <IF>
            <_name>246</_name>
            <_property />
          </IF>
          <IF>
            <_name>247</_name>
            <_property />
          </IF>
        </FUNCTION>
        <STATEMENT_COMPOSTION>
          <_name>Repository</_name>
          <_property>
            <URL>CodeAnalysis.PushStack.Repository</URL>
          </_property>
        </STATEMENT_COMPOSTION>
      </CLASS>
      <CLASS>
        <_name>PopStack</_name>
        <_property>
          <URL>CodeAnalysis.PopStack</URL>
          <USINGNAMESPACE>System,System.Collections,System.Collections.Generic,System.Text</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample2\Sub\RulesAndActions.cs</FILENAME>
          <PARENTCLASS>AAction</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>AAction</_name>
          <_property>
            <URL>CodeAnalysis.PopStack.AAction</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <MEMBER>
          <_name>repo_</_name>
          <_property>
            <URL>CodeAnalysis.PopStack.repo_</URL>
            <TYPE>Repository</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <FUNCTION>
          <_name>PopStack</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>PopStack</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
          <ARGUMENT>
            <_name>Repository</_name>
            <_property>
              <URL>CodeAnalysis.PopStack.Repository</URL>
              <TYPE>Repository</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>doAction</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>10</COMPLEXITY>
            <SIZE>40</SIZE>
          </_property>
          <ARGUMENT>
            <_name>CSsemi.CSemiExp</_name>
            <_property>
              <URL>CodeAnalysis.PopStack.CSsemi.CSemiExp</URL>
              <TYPE>CSsemi.CSemiExp</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <TRY>
            <_name>8</_name>
            <_property />
            <FOR>
              <_name>36</_name>
              <_property />
              <IF>
                <_name>248</_name>
                <_property />
                <IF>
                  <_name>249</_name>
                  <_property />
                  <IF>
                    <_name>250</_name>
                    <_property />
                    <LOOPBREAK>
                      <_name>11</_name>
                      <_property />
                    </LOOPBREAK>
                  </IF>
                </IF>
              </IF>
            </FOR>
          </TRY>
          <CATCH>
            <_name>8</_name>
            <_property />
          </CATCH>
          <IF>
            <_name>251</_name>
            <_property />
          </IF>
          <IF>
            <_name>252</_name>
            <_property />
          </IF>
        </FUNCTION>
        <STATEMENT_COMPOSTION>
          <_name>Repository</_name>
          <_property>
            <URL>CodeAnalysis.PopStack.Repository</URL>
          </_property>
        </STATEMENT_COMPOSTION>
      </CLASS>
      <CLASS>
        <_name>PrintFunction</_name>
        <_property>
          <URL>CodeAnalysis.PrintFunction</URL>
          <USINGNAMESPACE>System,System.Collections,System.Collections.Generic,System.Text</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample2\Sub\RulesAndActions.cs</FILENAME>
          <PARENTCLASS>AAction</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>AAction</_name>
          <_property>
            <URL>CodeAnalysis.PrintFunction.AAction</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <MEMBER>
          <_name>repo_</_name>
          <_property>
            <URL>CodeAnalysis.PrintFunction.repo_</URL>
            <TYPE>Repository</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <FUNCTION>
          <_name>PrintFunction</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>PrintFunction</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
          <ARGUMENT>
            <_name>Repository</_name>
            <_property>
              <URL>CodeAnalysis.PrintFunction.Repository</URL>
              <TYPE>Repository</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>display</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>6</SIZE>
          </_property>
          <ARGUMENT>
            <_name>CSsemi.CSemiExp</_name>
            <_property>
              <URL>CodeAnalysis.PrintFunction.CSsemi.CSemiExp</URL>
              <TYPE>CSsemi.CSemiExp</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <FOR>
            <_name>37</_name>
            <_property />
          </FOR>
        </FUNCTION>
        <FUNCTION>
          <_name>doAction</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
          <ARGUMENT>
            <_name>CSsemi.CSemiExp</_name>
            <_property>
              <URL>CodeAnalysis.PrintFunction.CSsemi.CSemiExp</URL>
              <TYPE>CSsemi.CSemiExp</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <STATEMENT_COMPOSTION>
          <_name>Repository</_name>
          <_property>
            <URL>CodeAnalysis.PrintFunction.Repository</URL>
          </_property>
        </STATEMENT_COMPOSTION>
      </CLASS>
      <CLASS>
        <_name>Print</_name>
        <_property>
          <URL>CodeAnalysis.Print</URL>
          <USINGNAMESPACE>System,System.Collections,System.Collections.Generic,System.Text</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample2\Sub\RulesAndActions.cs</FILENAME>
          <PARENTCLASS>AAction</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>AAction</_name>
          <_property>
            <URL>CodeAnalysis.Print.AAction</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <MEMBER>
          <_name>repo_</_name>
          <_property>
            <URL>CodeAnalysis.Print.repo_</URL>
            <TYPE>Repository</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <FUNCTION>
          <_name>Print</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>Print</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
          <ARGUMENT>
            <_name>Repository</_name>
            <_property>
              <URL>CodeAnalysis.Print.Repository</URL>
              <TYPE>Repository</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>doAction</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>3</SIZE>
          </_property>
          <ARGUMENT>
            <_name>CSsemi.CSemiExp</_name>
            <_property>
              <URL>CodeAnalysis.Print.CSsemi.CSemiExp</URL>
              <TYPE>CSsemi.CSemiExp</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <STATEMENT_COMPOSTION>
          <_name>Repository</_name>
          <_property>
            <URL>CodeAnalysis.Print.Repository</URL>
          </_property>
        </STATEMENT_COMPOSTION>
      </CLASS>
      <CLASS>
        <_name>DetectNamespace</_name>
        <_property>
          <URL>CodeAnalysis.DetectNamespace</URL>
          <USINGNAMESPACE>System,System.Collections,System.Collections.Generic,System.Text</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample2\Sub\RulesAndActions.cs</FILENAME>
          <PARENTCLASS>ARule</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>ARule</_name>
          <_property>
            <URL>CodeAnalysis.DetectNamespace.ARule</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>test</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>12</SIZE>
          </_property>
          <ARGUMENT>
            <_name>CSsemi.CSemiExp</_name>
            <_property>
              <URL>CodeAnalysis.DetectNamespace.CSsemi.CSemiExp</URL>
              <TYPE>CSsemi.CSemiExp</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>253</_name>
            <_property />
          </IF>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>DetectClass</_name>
        <_property>
          <URL>CodeAnalysis.DetectClass</URL>
          <USINGNAMESPACE>System,System.Collections,System.Collections.Generic,System.Text</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample2\Sub\RulesAndActions.cs</FILENAME>
          <PARENTCLASS>ARule</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>ARule</_name>
          <_property>
            <URL>CodeAnalysis.DetectClass.ARule</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>test</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>17</SIZE>
          </_property>
          <ARGUMENT>
            <_name>CSsemi.CSemiExp</_name>
            <_property>
              <URL>CodeAnalysis.DetectClass.CSsemi.CSemiExp</URL>
              <TYPE>CSsemi.CSemiExp</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>254</_name>
            <_property />
          </IF>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>DetectFunction</_name>
        <_property>
          <URL>CodeAnalysis.DetectFunction</URL>
          <USINGNAMESPACE>System,System.Collections,System.Collections.Generic,System.Text</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample2\Sub\RulesAndActions.cs</FILENAME>
          <PARENTCLASS>ARule</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>ARule</_name>
          <_property>
            <URL>CodeAnalysis.DetectFunction.ARule</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>isSpecialToken</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>6</SIZE>
          </_property>
          <ARGUMENT>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalysis.DetectFunction.string</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <FOREACH>
            <_name>43</_name>
            <_property />
          </FOREACH>
        </FUNCTION>
        <FUNCTION>
          <_name>test</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>3</COMPLEXITY>
            <SIZE>13</SIZE>
          </_property>
          <ARGUMENT>
            <_name>CSsemi.CSemiExp</_name>
            <_property>
              <URL>CodeAnalysis.DetectFunction.CSsemi.CSemiExp</URL>
              <TYPE>CSsemi.CSemiExp</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>255</_name>
            <_property />
          </IF>
          <IF>
            <_name>256</_name>
            <_property />
          </IF>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>DetectAnonymousScope</_name>
        <_property>
          <URL>CodeAnalysis.DetectAnonymousScope</URL>
          <USINGNAMESPACE>System,System.Collections,System.Collections.Generic,System.Text</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample2\Sub\RulesAndActions.cs</FILENAME>
          <PARENTCLASS>ARule</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>ARule</_name>
          <_property>
            <URL>CodeAnalysis.DetectAnonymousScope.ARule</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>test</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>12</SIZE>
          </_property>
          <ARGUMENT>
            <_name>CSsemi.CSemiExp</_name>
            <_property>
              <URL>CodeAnalysis.DetectAnonymousScope.CSsemi.CSemiExp</URL>
              <TYPE>CSsemi.CSemiExp</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>257</_name>
            <_property />
          </IF>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>DetectLeavingScope</_name>
        <_property>
          <URL>CodeAnalysis.DetectLeavingScope</URL>
          <USINGNAMESPACE>System,System.Collections,System.Collections.Generic,System.Text</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample2\Sub\RulesAndActions.cs</FILENAME>
          <PARENTCLASS>ARule</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>ARule</_name>
          <_property>
            <URL>CodeAnalysis.DetectLeavingScope.ARule</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>test</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>bool</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>8</SIZE>
          </_property>
          <ARGUMENT>
            <_name>CSsemi.CSemiExp</_name>
            <_property>
              <URL>CodeAnalysis.DetectLeavingScope.CSsemi.CSemiExp</URL>
              <TYPE>CSsemi.CSemiExp</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
          <IF>
            <_name>258</_name>
            <_property />
          </IF>
        </FUNCTION>
      </CLASS>
      <CLASS>
        <_name>BuildCodeAnalyzer</_name>
        <_property>
          <URL>CodeAnalysis.BuildCodeAnalyzer</URL>
          <USINGNAMESPACE>System,System.Collections,System.Collections.Generic,System.Text</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample2\Sub\RulesAndActions.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalysis.BuildCodeAnalyzer.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <MEMBER>
          <_name>repo</_name>
          <_property>
            <URL>CodeAnalysis.BuildCodeAnalyzer.repo</URL>
            <TYPE>Repository</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>True</ISCREATED>
          </_property>
        </MEMBER>
        <FUNCTION>
          <_name>BuildCodeAnalyzer</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>BuildCodeAnalyzer</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
          <ARGUMENT>
            <_name>CSsemi.CSemiExp</_name>
            <_property>
              <URL>CodeAnalysis.BuildCodeAnalyzer.CSsemi.CSemiExp</URL>
              <TYPE>CSsemi.CSemiExp</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>build</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>Parser</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>38</SIZE>
          </_property>
        </FUNCTION>
        <STATEMENT_AGGREGATION>
          <_name>Repository</_name>
          <_property>
            <URL>CodeAnalysis.BuildCodeAnalyzer.Repository</URL>
          </_property>
        </STATEMENT_AGGREGATION>
      </CLASS>
      <CLASS>
        <_name>ScopeStack&lt;E&gt;</_name>
        <_property>
          <URL>CodeAnalysis.ScopeStack&lt;E&gt;</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample2\Sub\ScopeStack.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalysis.ScopeStack&lt;E&gt;.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <MEMBER>
          <_name>stack_</_name>
          <_property>
            <URL>CodeAnalysis.ScopeStack&lt;E&gt;.stack_</URL>
            <TYPE>List&lt;E&gt;</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>True</ISCREATED>
          </_property>
        </MEMBER>
        <MEMBER>
          <_name>lastPopped_</_name>
          <_property>
            <URL>CodeAnalysis.ScopeStack&lt;E&gt;.lastPopped_</URL>
            <TYPE>E</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
        </MEMBER>
        <FUNCTION>
          <_name>push</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
          <ARGUMENT>
            <_name>E</_name>
            <_property>
              <URL>CodeAnalysis.ScopeStack&lt;E&gt;.E</URL>
              <TYPE>E</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
            </_property>
          </ARGUMENT>
        </FUNCTION>
        <FUNCTION>
          <_name>pop</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>E</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>8</SIZE>
          </_property>
          <IF>
            <_name>259</_name>
            <_property />
          </IF>
        </FUNCTION>
        <FUNCTION>
          <_name>clear</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
        </FUNCTION>
        <PROPERTY>
          <_name>this[inti]</_name>
          <_property>
            <URL>CodeAnalysis.ScopeStack&lt;E&gt;.this[inti]</URL>
            <TYPE>E</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>87</_name>
            <_property />
            <IF>
              <_name>260</_name>
              <_property />
            </IF>
          </OTHER>
          <OTHER>
            <_name>88</_name>
            <_property />
            <IF>
              <_name>261</_name>
              <_property />
            </IF>
          </OTHER>
        </PROPERTY>
        <PROPERTY>
          <_name>count</_name>
          <_property>
            <URL>CodeAnalysis.ScopeStack&lt;E&gt;.count</URL>
            <TYPE>int</TYPE>
            <TYPEURL></TYPEURL>
            <ISSTRUCT>False</ISSTRUCT>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <ISSTATIC>False</ISSTATIC>
            <ISCREATED>False</ISCREATED>
          </_property>
          <OTHER>
            <_name>89</_name>
            <_property />
          </OTHER>
        </PROPERTY>
        <FUNCTION>
          <_name>lastPopped</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>E</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>2</SIZE>
          </_property>
        </FUNCTION>
        <FUNCTION>
          <_name>display</_name>
          <_property>
            <ACCESSIBILITY>public</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>2</COMPLEXITY>
            <SIZE>5</SIZE>
          </_property>
          <FOR>
            <_name>38</_name>
            <_property />
          </FOR>
        </FUNCTION>
        <STATEMENT_AGGREGATION>
          <_name>List&lt;E&gt;</_name>
          <_property>
            <URL>CodeAnalysis.ScopeStack&lt;E&gt;.List&lt;E&gt;</URL>
          </_property>
        </STATEMENT_AGGREGATION>
        <STATEMENT_COMPOSTION>
          <_name>E</_name>
          <_property>
            <URL>CodeAnalysis.ScopeStack&lt;E&gt;.E</URL>
          </_property>
        </STATEMENT_COMPOSTION>
      </CLASS>
      <CLASS>
        <_name>Test</_name>
        <_property>
          <URL>CodeAnalysis.Test</URL>
          <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text</USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample2\Sub\ScopeStack.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>CodeAnalysis.Test.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <STRUCT>
          <_name>Elem</_name>
          <_property>
            <URL>CodeAnalysis.Test.Elem</URL>
            <USINGNAMESPACE>System,System.Collections.Generic,System.Linq,System.Text</USINGNAMESPACE>
            <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample2\Sub\ScopeStack.cs</FILENAME>
            <PARENTCLASS>Object</PARENTCLASS>
          </_property>
          <STATEMENT_INHERITANCE>
            <_name>Object</_name>
            <_property>
              <URL>CodeAnalysis.Test.Elem.Object</URL>
            </_property>
          </STATEMENT_INHERITANCE>
          <MEMBER>
            <_name>type</_name>
            <_property>
              <URL>CodeAnalysis.Test.Elem.type</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
              <ACCESSIBILITY>public</ACCESSIBILITY>
              <ISSTATIC>False</ISSTATIC>
              <ISCREATED>False</ISCREATED>
            </_property>
          </MEMBER>
          <MEMBER>
            <_name>name</_name>
            <_property>
              <URL>CodeAnalysis.Test.Elem.name</URL>
              <TYPE>string</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
              <ACCESSIBILITY>public</ACCESSIBILITY>
              <ISSTATIC>False</ISSTATIC>
              <ISCREATED>False</ISCREATED>
            </_property>
          </MEMBER>
          <MEMBER>
            <_name>place</_name>
            <_property>
              <URL>CodeAnalysis.Test.Elem.place</URL>
              <TYPE>int</TYPE>
              <TYPEURL></TYPEURL>
              <ISSTRUCT>False</ISSTRUCT>
              <ACCESSIBILITY>public</ACCESSIBILITY>
              <ISSTATIC>False</ISSTATIC>
              <ISCREATED>False</ISCREATED>
            </_property>
          </MEMBER>
          <FUNCTION>
            <_name>make</_name>
            <_property>
              <ACCESSIBILITY>public</ACCESSIBILITY>
              <TYPE>void</TYPE>
              <ISSTATIC>False</ISSTATIC>
              <COMPLEXITY>1</COMPLEXITY>
              <SIZE>4</SIZE>
            </_property>
            <ARGUMENT>
              <_name>string</_name>
              <_property>
                <URL>CodeAnalysis.Test.Elem.string</URL>
                <TYPE>string</TYPE>
                <TYPEURL></TYPEURL>
                <ISSTRUCT>False</ISSTRUCT>
              </_property>
            </ARGUMENT>
            <ARGUMENT>
              <_name>string</_name>
              <_property>
                <URL>CodeAnalysis.Test.Elem.string</URL>
                <TYPE>string</TYPE>
                <TYPEURL></TYPEURL>
                <ISSTRUCT>False</ISSTRUCT>
              </_property>
            </ARGUMENT>
            <ARGUMENT>
              <_name>int</_name>
              <_property>
                <URL>CodeAnalysis.Test.Elem.int</URL>
                <TYPE>int</TYPE>
                <TYPEURL></TYPEURL>
                <ISSTRUCT>False</ISSTRUCT>
              </_property>
            </ARGUMENT>
          </FUNCTION>
          <FUNCTION>
            <_name>ToString</_name>
            <_property>
              <ACCESSIBILITY>public</ACCESSIBILITY>
              <TYPE>string</TYPE>
              <ISSTATIC>False</ISSTATIC>
              <COMPLEXITY>1</COMPLEXITY>
              <SIZE>8</SIZE>
            </_property>
          </FUNCTION>
          <STATEMENT_COMPOSTION>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalysis.Test.Elem.string</URL>
            </_property>
          </STATEMENT_COMPOSTION>
          <STATEMENT_COMPOSTION>
            <_name>string</_name>
            <_property>
              <URL>CodeAnalysis.Test.Elem.string</URL>
            </_property>
          </STATEMENT_COMPOSTION>
          <STATEMENT_COMPOSTION>
            <_name>int</_name>
            <_property>
              <URL>CodeAnalysis.Test.Elem.int</URL>
            </_property>
          </STATEMENT_COMPOSTION>
        </STRUCT>
        <FUNCTION>
          <_name>Main</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>True</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>32</SIZE>
          </_property>
        </FUNCTION>
      </CLASS>
    </NAMESPACE>
    <NAMESPACE>
      <_name>STD</_name>
      <_property>
        <URL>STD</URL>
      </_property>
      <CLASS>
        <_name>Mygod</_name>
        <_property>
          <URL>STD.Mygod</URL>
          <USINGNAMESPACE></USINGNAMESPACE>
          <FILENAME>C:\Home\WorkPlace\Syr\CLASS\Software Modelling\MyTest\DependencyAnalyzer\DependencyAnalyzer\bin\Debug\TestSample\Sample2\Sub\Sc.cs</FILENAME>
          <PARENTCLASS>Object</PARENTCLASS>
        </_property>
        <STATEMENT_INHERITANCE>
          <_name>Object</_name>
          <_property>
            <URL>STD.Mygod.Object</URL>
          </_property>
        </STATEMENT_INHERITANCE>
        <FUNCTION>
          <_name>FFF</_name>
          <_property>
            <ACCESSIBILITY>protected</ACCESSIBILITY>
            <TYPE>void</TYPE>
            <ISSTATIC>False</ISSTATIC>
            <COMPLEXITY>1</COMPLEXITY>
            <SIZE>3</SIZE>
          </_property>
        </FUNCTION>
      </CLASS>
    </NAMESPACE>
  </ROOT>
</Repository>